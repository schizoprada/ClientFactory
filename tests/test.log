2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (TestComponent)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (TestComponent)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (TestComponent)
2025-03-24 17:29:34 | DEBUG | DeclarativeComponent: Processing Attribute (attribute) on: TestComponent
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (TestComponent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {}, 'methods': {}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {}, 'attribute': 'value'}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Parent)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:29:34 | DEBUG | DeclarativeComponent: Processing Attribute (parent_attr) on: Parent
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {}, 'methods': {}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent'}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (Parent) to (Child)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:29:34 | DEBUG | DeclarativeComponent: Processing Attribute (child_attr) on: Child
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {}, 'methods': {}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (NestedComponent)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (NestedComponent)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (NestedComponent)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (NestedComponent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {}, 'methods': {}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: found callable (method) on: Container
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: registered method (method) on: Container
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: found class (NestedComponent) on (Container)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: class (NestedComponent) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: registered component (None) on: Container
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeComponent: Processing Attribute (attr) on: Test
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value'}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (Declarative)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Declarative)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (Declarative)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (Declarative) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff'}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (Source)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Source)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (Source)
2025-03-24 17:29:34 | DEBUG | DeclarativeComponent: Processing Attribute (a) on: Source
2025-03-24 17:29:34 | DEBUG | DeclarativeComponent: Processing Attribute (b) on: Source
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (Source) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (Target)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Target)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (Target)
2025-03-24 17:29:34 | DEBUG | DeclarativeComponent: Processing Attribute (c) on: Target
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (Target) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (Component)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Component)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (Component)
2025-03-24 17:29:34 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: Component
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (Component) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: found class (Component) on (Container)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: class (Component) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Container
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:29:34 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: TestClient
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: TestClient
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeClient: found resource (mycomponent) on: TestClient
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: found class (TestResource) on (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Test
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeClient: found resource (mycomponent) on: Test
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | client: converted (Test) to declarative client
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/test', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: registered component (myresource) on: TestClient
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/test', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeClient: found resource (myresource) on: TestClient
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/test', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | client: converted (TestClient) to declarative client
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (BaseResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (BaseResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: BaseResource
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: completed processing for (BaseResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | resource: converted (BaseResource) to declarative resource
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (BaseClient)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (BaseClient)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (BaseClient)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseClient)
2025-03-24 17:29:34 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: BaseClient
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: found class (BaseResource) on (BaseClient)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: class (BaseResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: registered component (myresource) on: BaseClient
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: completed processing for (BaseClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeClient: found resource (myresource) on: BaseClient
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (BaseClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (ChildResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (ChildResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: ChildResource
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: completed processing for (ChildResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | resource: converted (ChildResource) to declarative resource
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (ChildClient)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (BaseClient) to (ChildClient)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (ChildClient)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildClient)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: found class (ChildResource) on (ChildClient)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: class (ChildResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: registered component (myresource) on: ChildClient
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: completed processing for (ChildClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeClient: found resource (myresource) on: ChildClient
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (ChildClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test'}
2025-03-24 17:29:34 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test'}
2025-03-24 17:29:34 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (Nested)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Nested)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (Nested)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (Nested) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104719760>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: found callable (method) on: Test
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: registered method (method) on: Test
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: found class (Nested) on (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: class (Nested) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x10476c540>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: registered component (myresource) on: Test
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x10476c540>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x10476c540>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:29:34 | DEBUG | container: converted (Test) to declarative container
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x10476c540>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x10476c540>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:29:34 | DEBUG | container: converted (Test) to declarative container
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:29:34 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: TestResource
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x10476c540>}, 'path': '/test', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x10476c540>}, 'path': '/test', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (GrandChild)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (GrandChild)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: starting attribute processing for (GrandChild)
2025-03-24 17:29:34 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: GrandChild
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: completed processing for (GrandChild) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x10476c540>}, 'path': 'grandchild', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x10476c540>}, 'path': 'grandchild', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:29:34 | DEBUG | resource: converted (GrandChild) to declarative resource
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Child)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: starting attribute processing for (Child)
2025-03-24 17:29:34 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Child
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: found class (GrandChild) on (Child)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: class (GrandChild) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x10476c540>}, 'path': 'child', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: registered component (test_resource) on: Child
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: completed processing for (Child) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x10476c540>}, 'path': 'child', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x10476c540>}, 'path': 'child', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:29:34 | DEBUG | resource: converted (Child) to declarative resource
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Parent)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: starting attribute processing for (Parent)
2025-03-24 17:29:34 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Parent
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: found class (Child) on (Parent)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: class (Child) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x10476c540>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: registered component (test_resource) on: Parent
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: completed processing for (Parent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x10476c540>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x10476c540>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x10476c540>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x10476c540>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:29:34 | DEBUG | resource: converted (Test) to declarative resource
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: found callable (test_method) on: TestResource
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: registered method (test_method) on: TestResource
2025-03-24 17:29:34 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x10476c540>, 'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x1047182c0>}, 'path': '/test', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:29:34 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1046c9da0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1046c9e40>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1046c9ee0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1046c9f80>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1046ca020>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1046ca0c0>)>, 'components': {None: <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x10476c540>, 'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x1047182c0>}, 'path': '/test', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1046caa20>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1046caac0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1046cab60>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1046cb100>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1046cb1a0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: creating class (TestComponent)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (TestComponent)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: processing attributes for (TestComponent)
2025-03-24 17:32:05 | DEBUG | DeclarativeComponent: Processing Attribute (attribute) on: TestComponent
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: completed creation of (TestComponent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {}, 'methods': {}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {}, 'attribute': 'value'}
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Parent)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:32:05 | DEBUG | DeclarativeComponent: Processing Attribute (parent_attr) on: Parent
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {}, 'methods': {}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent'}
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: copyinh metadata from base (Parent) to (Child)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:32:05 | DEBUG | DeclarativeComponent: Processing Attribute (child_attr) on: Child
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {}, 'methods': {}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: creating class (NestedComponent)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (NestedComponent)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: processing attributes for (NestedComponent)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: completed creation of (NestedComponent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {}, 'methods': {}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: found callable (method) on: Container
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: registered method (method) on: Container
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: found class (NestedComponent) on (Container)
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: class (NestedComponent) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: registered component (nestedcomponent) on: Container
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:32:05 | DEBUG | DeclarativeComponent: Processing Attribute (attr) on: Test
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value'}
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: creating class (Declarative)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Declarative)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: processing attributes for (Declarative)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: completed creation of (Declarative) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff'}
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: creating class (Source)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Source)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: processing attributes for (Source)
2025-03-24 17:32:05 | DEBUG | DeclarativeComponent: Processing Attribute (a) on: Source
2025-03-24 17:32:05 | DEBUG | DeclarativeComponent: Processing Attribute (b) on: Source
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: completed creation of (Source) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: creating class (Target)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Target)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: processing attributes for (Target)
2025-03-24 17:32:05 | DEBUG | DeclarativeComponent: Processing Attribute (c) on: Target
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: completed creation of (Target) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: creating class (Component)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Component)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: processing attributes for (Component)
2025-03-24 17:32:05 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: Component
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: completed creation of (Component) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: found class (Component) on (Container)
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: class (Component) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Container
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:05 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:32:05 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: TestClient
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: TestClient
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:05 | DEBUG | DeclarativeClient: found resource (mycomponent) on: TestClient
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:32:05 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:05 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (Test)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: found class (TestResource) on (Test)
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Test
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:05 | DEBUG | DeclarativeClient: found resource (mycomponent) on: Test
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:05 | DEBUG | client: converted (Test) to declarative client
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:32:05 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/test', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: registered component (myresource) on: TestClient
2025-03-24 17:32:05 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/test', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:05 | DEBUG | DeclarativeClient: found resource (myresource) on: TestClient
2025-03-24 17:32:05 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/test', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:05 | DEBUG | client: converted (TestClient) to declarative client
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: creating class (BaseResource)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (BaseResource)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseResource)
2025-03-24 17:32:06 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: BaseResource
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: completed processing for (BaseResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:06 | DEBUG | resource: converted (BaseResource) to declarative resource
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: creating class (BaseClient)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (BaseClient)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: processing attributes for (BaseClient)
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseClient)
2025-03-24 17:32:06 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: BaseClient
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: found class (BaseResource) on (BaseClient)
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: class (BaseResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: registered component (myresource) on: BaseClient
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: completed processing for (BaseClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:06 | DEBUG | DeclarativeClient: found resource (myresource) on: BaseClient
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: completed creation of (BaseClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: creating class (ChildResource)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (ChildResource)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildResource)
2025-03-24 17:32:06 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: ChildResource
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: completed processing for (ChildResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:06 | DEBUG | resource: converted (ChildResource) to declarative resource
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: creating class (ChildClient)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: copyinh metadata from base (BaseClient) to (ChildClient)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: processing attributes for (ChildClient)
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildClient)
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: found class (ChildResource) on (ChildClient)
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: class (ChildResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: registered component (myresource) on: ChildClient
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: completed processing for (ChildClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:06 | DEBUG | DeclarativeClient: found resource (myresource) on: ChildClient
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: completed creation of (ChildClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:32:06 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test'}
2025-03-24 17:32:06 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test'}
2025-03-24 17:32:06 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: creating class (Nested)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Nested)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: processing attributes for (Nested)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: completed creation of (Nested) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a05800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:32:06 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: found callable (method) on: Test
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: registered method (method) on: Test
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: found class (Nested) on (Test)
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: class (Nested) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a484a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: registered component (myresource) on: Test
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a484a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a484a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:32:06 | DEBUG | container: converted (Test) to declarative container
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a484a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a484a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:32:06 | DEBUG | container: converted (Test) to declarative container
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:32:06 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:32:06 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: TestResource
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a484a0>}, 'path': '/test', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a484a0>}, 'path': '/test', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: creating class (GrandChild)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (GrandChild)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: starting attribute processing for (GrandChild)
2025-03-24 17:32:06 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: GrandChild
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: completed processing for (GrandChild) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a484a0>}, 'path': 'grandchild', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a484a0>}, 'path': 'grandchild', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:32:06 | DEBUG | resource: converted (GrandChild) to declarative resource
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Child)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: starting attribute processing for (Child)
2025-03-24 17:32:06 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Child
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: found class (GrandChild) on (Child)
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: class (GrandChild) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a484a0>}, 'path': 'child', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: registered component (test_resource) on: Child
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: completed processing for (Child) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a484a0>}, 'path': 'child', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a484a0>}, 'path': 'child', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:32:06 | DEBUG | resource: converted (Child) to declarative resource
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Parent)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: starting attribute processing for (Parent)
2025-03-24 17:32:06 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Parent
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: found class (Child) on (Parent)
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: class (Child) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a484a0>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: registered component (test_resource) on: Parent
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: completed processing for (Parent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a484a0>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a484a0>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Test)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a484a0>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a484a0>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:32:06 | DEBUG | resource: converted (Test) to declarative resource
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: found callable (test_method) on: TestResource
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: registered method (test_method) on: TestResource
2025-03-24 17:32:06 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a484a0>, 'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x102a482c0>}, 'path': '/test', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:32:06 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1029a9ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1029a9f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1029aa020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1029aa0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1029aa160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1029aa200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a484a0>, 'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x102a482c0>}, 'path': '/test', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1029aab60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1029aac00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1029aaca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1029ab1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1029ab240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (TestComponent)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (TestComponent)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (TestComponent)
2025-03-24 17:34:34 | DEBUG | DeclarativeComponent: Processing Attribute (attribute) on: TestComponent
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (TestComponent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {}, 'methods': {}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {}, 'attribute': 'value'}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Parent)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:34:34 | DEBUG | DeclarativeComponent: Processing Attribute (parent_attr) on: Parent
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {}, 'methods': {}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent'}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (Parent) to (Child)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:34:34 | DEBUG | DeclarativeComponent: Processing Attribute (child_attr) on: Child
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {}, 'methods': {}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (NestedComponent)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (NestedComponent)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (NestedComponent)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (NestedComponent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {}, 'methods': {}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: found callable (method) on: Container
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: registered method (method) on: Container
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: found class (NestedComponent) on (Container)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: class (NestedComponent) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: registered component (nestedcomponent) on: Container
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeComponent: Processing Attribute (attr) on: Test
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value'}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (Declarative)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Declarative)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (Declarative)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (Declarative) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff'}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (Source)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Source)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (Source)
2025-03-24 17:34:34 | DEBUG | DeclarativeComponent: Processing Attribute (a) on: Source
2025-03-24 17:34:34 | DEBUG | DeclarativeComponent: Processing Attribute (b) on: Source
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (Source) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (Target)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Target)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (Target)
2025-03-24 17:34:34 | DEBUG | DeclarativeComponent: Processing Attribute (c) on: Target
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (Target) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (Component)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Component)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (Component)
2025-03-24 17:34:34 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: Component
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (Component) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: found class (Component) on (Container)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: class (Component) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Container
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:34:34 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: TestClient
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: TestClient
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeClient: found resource (mycomponent) on: TestClient
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: found class (TestResource) on (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Test
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeClient: found resource (mycomponent) on: Test
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | client: converted (Test) to declarative client
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/test', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: registered component (myresource) on: TestClient
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/test', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeClient: found resource (myresource) on: TestClient
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/test', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | client: converted (TestClient) to declarative client
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (BaseResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (BaseResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: BaseResource
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: completed processing for (BaseResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | resource: converted (BaseResource) to declarative resource
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (BaseClient)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (BaseClient)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (BaseClient)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseClient)
2025-03-24 17:34:34 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: BaseClient
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: found class (BaseResource) on (BaseClient)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: class (BaseResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: registered component (myresource) on: BaseClient
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: completed processing for (BaseClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeClient: found resource (myresource) on: BaseClient
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (BaseClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (ChildResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (ChildResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: ChildResource
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: completed processing for (ChildResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | resource: converted (ChildResource) to declarative resource
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (ChildClient)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (BaseClient) to (ChildClient)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (ChildClient)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildClient)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: found class (ChildResource) on (ChildClient)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: class (ChildResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: registered component (myresource) on: ChildClient
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: completed processing for (ChildClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeClient: found resource (myresource) on: ChildClient
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (ChildClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test'}
2025-03-24 17:34:34 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test'}
2025-03-24 17:34:34 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (Nested)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Nested)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (Nested)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (Nested) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104811800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: found callable (method) on: Test
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: registered method (method) on: Test
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: found class (Nested) on (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: class (Nested) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1048504a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: registered component (myresource) on: Test
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1048504a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1048504a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:34:34 | DEBUG | container: converted (Test) to declarative container
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1048504a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1048504a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:34:34 | DEBUG | container: converted (Test) to declarative container
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:34:34 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: TestResource
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1048504a0>}, 'path': '/test', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1048504a0>}, 'path': '/test', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (GrandChild)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (GrandChild)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: starting attribute processing for (GrandChild)
2025-03-24 17:34:34 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: GrandChild
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: completed processing for (GrandChild) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1048504a0>}, 'path': 'grandchild', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1048504a0>}, 'path': 'grandchild', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:34:34 | DEBUG | resource: converted (GrandChild) to declarative resource
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Child)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: starting attribute processing for (Child)
2025-03-24 17:34:34 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Child
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: found class (GrandChild) on (Child)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: class (GrandChild) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1048504a0>}, 'path': 'child', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: registered component (test_resource) on: Child
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: completed processing for (Child) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1048504a0>}, 'path': 'child', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1048504a0>}, 'path': 'child', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:34:34 | DEBUG | resource: converted (Child) to declarative resource
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Parent)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: starting attribute processing for (Parent)
2025-03-24 17:34:34 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Parent
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: found class (Child) on (Parent)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: class (Child) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1048504a0>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: registered component (test_resource) on: Parent
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: completed processing for (Parent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1048504a0>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1048504a0>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1048504a0>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1048504a0>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:34:34 | DEBUG | resource: converted (Test) to declarative resource
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: found callable (test_method) on: TestResource
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: registered method (test_method) on: TestResource
2025-03-24 17:34:34 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1048504a0>, 'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x1048502c0>}, 'path': '/test', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:34:34 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1047b1ee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1047b1f80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1047b2020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1047b20c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1047b2160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1047b2200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1048504a0>, 'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x1048502c0>}, 'path': '/test', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1047b2b60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1047b2c00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1047b2ca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1047b31a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1047b3240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'c': 3, 'value': 'test', 'key': 'value'}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (TestComponent)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (TestComponent)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (TestComponent)
2025-03-24 17:36:13 | DEBUG | DeclarativeComponent: Processing Attribute (attribute) on: TestComponent
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (TestComponent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {}, 'methods': {}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {}, 'attribute': 'value'}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Parent)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:36:13 | DEBUG | DeclarativeComponent: Processing Attribute (parent_attr) on: Parent
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {}, 'methods': {}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent'}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (Parent) to (Child)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:36:13 | DEBUG | DeclarativeComponent: Processing Attribute (child_attr) on: Child
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {}, 'methods': {}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (NestedComponent)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (NestedComponent)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (NestedComponent)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (NestedComponent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {}, 'methods': {}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: found callable (method) on: Container
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: registered method (method) on: Container
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: found class (NestedComponent) on (Container)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: class (NestedComponent) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: registered component (nestedcomponent) on: Container
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeComponent: Processing Attribute (attr) on: Test
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value'}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (Declarative)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Declarative)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (Declarative)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (Declarative) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff'}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (Source)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Source)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (Source)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (Source) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff'}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (Target)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Target)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (Target)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (Target) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (Component)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Component)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (Component)
2025-03-24 17:36:13 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: Component
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (Component) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: found class (Component) on (Container)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: class (Component) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Container
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:36:13 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: TestClient
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: TestClient
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeClient: found resource (mycomponent) on: TestClient
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: found class (TestResource) on (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Test
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeClient: found resource (mycomponent) on: Test
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | client: converted (Test) to declarative client
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/test', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: registered component (myresource) on: TestClient
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/test', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeClient: found resource (myresource) on: TestClient
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/test', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | client: converted (TestClient) to declarative client
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (BaseResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (BaseResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: BaseResource
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: completed processing for (BaseResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | resource: converted (BaseResource) to declarative resource
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (BaseClient)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (BaseClient)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (BaseClient)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseClient)
2025-03-24 17:36:13 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: BaseClient
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: found class (BaseResource) on (BaseClient)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: class (BaseResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: registered component (myresource) on: BaseClient
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: completed processing for (BaseClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeClient: found resource (myresource) on: BaseClient
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (BaseClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (ChildResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (ChildResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: ChildResource
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: completed processing for (ChildResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | resource: converted (ChildResource) to declarative resource
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (ChildClient)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (BaseClient) to (ChildClient)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (ChildClient)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildClient)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: found class (ChildResource) on (ChildClient)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: class (ChildResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: registered component (myresource) on: ChildClient
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: completed processing for (ChildClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeClient: found resource (myresource) on: ChildClient
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (ChildClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test'}
2025-03-24 17:36:13 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test'}
2025-03-24 17:36:13 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (Nested)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Nested)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (Nested)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (Nested) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10252d8a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: found callable (method) on: Test
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: registered method (method) on: Test
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: found class (Nested) on (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: class (Nested) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1025bc400>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: registered component (myresource) on: Test
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1025bc400>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1025bc400>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:36:13 | DEBUG | container: converted (Test) to declarative container
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1025bc400>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1025bc400>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:36:13 | DEBUG | container: converted (Test) to declarative container
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:36:13 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: TestResource
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1025bc400>}, 'path': '/test', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1025bc400>}, 'path': '/test', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (GrandChild)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (GrandChild)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: starting attribute processing for (GrandChild)
2025-03-24 17:36:13 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: GrandChild
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: completed processing for (GrandChild) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1025bc400>}, 'path': 'grandchild', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1025bc400>}, 'path': 'grandchild', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:36:13 | DEBUG | resource: converted (GrandChild) to declarative resource
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Child)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: starting attribute processing for (Child)
2025-03-24 17:36:13 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Child
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: found class (GrandChild) on (Child)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: class (GrandChild) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1025bc400>}, 'path': 'child', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: registered component (test_resource) on: Child
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: completed processing for (Child) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1025bc400>}, 'path': 'child', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1025bc400>}, 'path': 'child', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:36:13 | DEBUG | resource: converted (Child) to declarative resource
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Parent)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: starting attribute processing for (Parent)
2025-03-24 17:36:13 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Parent
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: found class (Child) on (Parent)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: class (Child) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1025bc400>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: registered component (test_resource) on: Parent
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: completed processing for (Parent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1025bc400>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1025bc400>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1025bc400>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1025bc400>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:36:13 | DEBUG | resource: converted (Test) to declarative resource
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: found callable (test_method) on: TestResource
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: registered method (test_method) on: TestResource
2025-03-24 17:36:13 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1025bc400>, 'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x1025bc7c0>}, 'path': '/test', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:36:13 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1024f5f80>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1024f6020>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x1024f60c0>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1024f6160>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1024f6200>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1024f62a0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1025bc400>, 'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x1025bc7c0>}, 'path': '/test', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x1024f6c00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x1024f6ca0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x1024f6d40>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1024f7240>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1024f72e0>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (TestComponent)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (TestComponent)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (TestComponent)
2025-03-24 17:37:42 | DEBUG | DeclarativeComponent: Processing Attribute (attribute) on: TestComponent
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (TestComponent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {}, 'methods': {}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {}, 'attribute': 'value'}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Parent)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:37:42 | DEBUG | DeclarativeComponent: Processing Attribute (parent_attr) on: Parent
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {}, 'methods': {}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent'}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (Parent) to (Child)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:37:42 | DEBUG | DeclarativeComponent: Processing Attribute (child_attr) on: Child
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {}, 'methods': {}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (NestedComponent)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (NestedComponent)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (NestedComponent)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (NestedComponent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {}, 'methods': {}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: found callable (method) on: Container
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: registered method (method) on: Container
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: found class (NestedComponent) on (Container)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: class (NestedComponent) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: registered component (nestedcomponent) on: Container
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeComponent: Processing Attribute (attr) on: Test
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value'}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (Declarative)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Declarative)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (Declarative)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (Declarative) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff'}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (Source)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Source)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (Source)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (Source) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff'}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (Target)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Target)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (Target)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (Target) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '', 'name': None, 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (Component)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Component)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (Component)
2025-03-24 17:37:42 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: Component
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (Component) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: found class (Component) on (Container)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: class (Component) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Container
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:37:42 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: TestClient
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: TestClient
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeClient: found resource (mycomponent) on: TestClient
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: found class (TestResource) on (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Test
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeClient: found resource (mycomponent) on: Test
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | client: converted (Test) to declarative client
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/test', 'name': 'mycomponent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/test', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: registered component (myresource) on: TestClient
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/test', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeClient: found resource (myresource) on: TestClient
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/test', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | client: converted (TestClient) to declarative client
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (BaseResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (BaseResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: BaseResource
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: completed processing for (BaseResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | resource: converted (BaseResource) to declarative resource
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (BaseClient)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (BaseClient)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (BaseClient)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseClient)
2025-03-24 17:37:42 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: BaseClient
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: found class (BaseResource) on (BaseClient)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: class (BaseResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: registered component (myresource) on: BaseClient
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: completed processing for (BaseClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeClient: found resource (myresource) on: BaseClient
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (BaseClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/base', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (ChildResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (ChildResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: ChildResource
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: completed processing for (ChildResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | resource: converted (ChildResource) to declarative resource
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (ChildClient)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (BaseClient) to (ChildClient)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (ChildClient)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildClient)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: found class (ChildResource) on (ChildClient)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: class (ChildResource) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: registered component (myresource) on: ChildClient
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: completed processing for (ChildClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeClient: found resource (myresource) on: ChildClient
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (ChildClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test'}
2025-03-24 17:37:42 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test'}
2025-03-24 17:37:42 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (Nested)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Nested)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (Nested)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (Nested) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1044b9800>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: found callable (method) on: Test
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: registered method (method) on: Test
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: found class (Nested) on (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: class (Nested) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1044fc4a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: registered component (myresource) on: Test
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1044fc4a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1044fc4a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:37:42 | DEBUG | container: converted (Test) to declarative container
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1044fc4a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1044fc4a0>}, 'path': '/child', 'name': 'myresource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:37:42 | DEBUG | container: converted (Test) to declarative container
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:37:42 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: TestResource
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1044fc4a0>}, 'path': '/test', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1044fc4a0>}, 'path': '/test', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (GrandChild)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (GrandChild)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: starting attribute processing for (GrandChild)
2025-03-24 17:37:42 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: GrandChild
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: completed processing for (GrandChild) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1044fc4a0>}, 'path': 'grandchild', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1044fc4a0>}, 'path': 'grandchild', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:37:42 | DEBUG | resource: converted (GrandChild) to declarative resource
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Child)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: starting attribute processing for (Child)
2025-03-24 17:37:42 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Child
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: found class (GrandChild) on (Child)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: class (GrandChild) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1044fc4a0>}, 'path': 'child', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: registered component (test_resource) on: Child
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: completed processing for (Child) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1044fc4a0>}, 'path': 'child', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1044fc4a0>}, 'path': 'child', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:37:42 | DEBUG | resource: converted (Child) to declarative resource
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Parent)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: starting attribute processing for (Parent)
2025-03-24 17:37:42 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Parent
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: found class (Child) on (Parent)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: class (Child) has metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1044fc4a0>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: registered component (test_resource) on: Parent
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: completed processing for (Parent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1044fc4a0>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1044fc4a0>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1044fc4a0>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1044fc4a0>}, 'path': '/parent', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:37:42 | DEBUG | resource: converted (Test) to declarative resource
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: found callable (test_method) on: TestResource
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: registered method (test_method) on: TestResource
2025-03-24 17:37:42 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1044fc4a0>, 'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x1044fc2c0>}, 'path': '/test', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:37:42 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10445dee0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10445df80>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10445e020>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10445e0c0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10445e160>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10445e200>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>, 'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>, 'test_resource': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1044fc4a0>, 'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x1044fc2c0>}, 'path': '/test', 'name': 'test_resource', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10445eb60>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10445ec00>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10445eca0>)>, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10445f1a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10445f240>)>, 'resources': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>, 'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'attribute': 'value', 'parent_attr': 'parent', 'child_attr': 'child', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>, 'attr': 'value', 'new': 'data', 'more': 'stuff', 'a': 1, 'b': 2, 'value': 'test', 'key': 'value'}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (TestComponent)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (TestComponent)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (TestComponent)
2025-03-24 17:38:48 | DEBUG | DeclarativeComponent: Processing Attribute (attribute) on: TestComponent
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (TestComponent) - metadata: {'attribute': 'value'}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Parent)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:38:48 | DEBUG | DeclarativeComponent: Processing Attribute (parent_attr) on: Parent
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'parent_attr': 'parent'}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (Parent) to (Child)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:38:48 | DEBUG | DeclarativeComponent: Processing Attribute (child_attr) on: Child
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (NestedComponent)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (NestedComponent)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (NestedComponent)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (NestedComponent) - metadata: {}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: found callable (method) on: Container
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: registered method (method) on: Container
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: found class (NestedComponent) on (Container)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: class (NestedComponent) has metadata: {'components': {}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1028b19e0>}}
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: registered component (nestedcomponent) on: Container
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1028b19e0>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1028b19e0>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeComponent: Processing Attribute (attr) on: Test
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'attr': 'value'}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (Declarative)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Declarative)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (Declarative)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (Declarative) - metadata: {}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (Source)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Source)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (Source)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (Source) - metadata: {}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (Target)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Target)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (Target)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (Target) - metadata: {'a': 1, 'b': 2}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (Component)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Component)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (Component)
2025-03-24 17:38:48 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: Component
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (Component) - metadata: {'name': 'mycomponent'}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: found class (Component) on (Container)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: class (Component) has metadata: {'name': 'mycomponent', 'components': {}, 'methods': {}}
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Container
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'components': {}, 'methods': {}}
2025-03-24 17:38:48 | DEBUG | DeclarativeResource: set name to (testresource) for: TestResource
2025-03-24 17:38:48 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'components': {}, 'methods': {}, 'name': 'testresource', 'path': ''}
2025-03-24 17:38:48 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:38:48 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: TestClient
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'components': {}, 'methods': {}, 'name': 'testresource', 'path': '', 'baseurl': 'https://api.test.com'}
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: registered component (testresource) on: TestClient
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'name': 'testresource', 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>}
2025-03-24 17:38:48 | DEBUG | DeclarativeClient: found resource (testresource) on: TestClient
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'name': 'testresource', 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:38:48 | DEBUG | DeclarativeResource: set name to (testresource) for: TestResource
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'path': '/test', 'components': {}, 'methods': {}, 'name': 'testresource'}
2025-03-24 17:38:48 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: found class (TestResource) on (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'path': '/test', 'components': {}, 'methods': {}, 'name': 'testresource'}
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: registered component (testresource) on: Test
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'name': 'testresource', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>}
2025-03-24 17:38:48 | DEBUG | DeclarativeClient: extracted baseurl () from: Test
2025-03-24 17:38:48 | DEBUG | DeclarativeClient: found resource (testresource) on: Test
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'name': 'testresource', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'baseurl': '', 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 17:38:48 | DEBUG | client: converted (Test) to declarative client
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:38:48 | DEBUG | DeclarativeResource: set name to (testresource) for: TestResource
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'path': '/test', 'components': {}, 'methods': {}, 'name': 'testresource'}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'path': '/test', 'components': {}, 'methods': {}, 'name': 'myresource'}
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: registered component (myresource) on: TestClient
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'name': 'myresource', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>}
2025-03-24 17:38:48 | DEBUG | DeclarativeClient: extracted baseurl () from: TestClient
2025-03-24 17:38:48 | DEBUG | DeclarativeClient: found resource (myresource) on: TestClient
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'name': 'myresource', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'baseurl': '', 'resources': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}}
2025-03-24 17:38:48 | DEBUG | client: converted (TestClient) to declarative client
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (BaseResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (BaseResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: BaseResource
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (components) container for (BaseResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (methods) container for (BaseResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: completed processing for (BaseResource) - metadata: {'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 17:38:48 | DEBUG | DeclarativeResource: set name to (baseresource) for: BaseResource
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'path': '/base', 'components': {}, 'methods': {}, 'name': 'baseresource'}
2025-03-24 17:38:48 | DEBUG | resource: converted (BaseResource) to declarative resource
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (BaseClient)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (BaseClient)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (BaseClient)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseClient)
2025-03-24 17:38:48 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: BaseClient
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: found class (BaseResource) on (BaseClient)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: class (BaseResource) has metadata: {'path': '/base', 'components': {}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com'}
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: registered component (baseresource) on: BaseClient
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: completed processing for (BaseClient) - metadata: {'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>}
2025-03-24 17:38:48 | DEBUG | DeclarativeClient: found resource (baseresource) on: BaseClient
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (BaseClient) - metadata: {'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (ChildResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (ChildResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: ChildResource
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: completed processing for (ChildResource) - metadata: {'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:38:48 | DEBUG | resource: converted (ChildResource) to declarative resource
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (ChildClient)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (BaseClient) to (ChildClient)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (ChildClient)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildClient)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: found class (ChildResource) on (ChildClient)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: class (ChildResource) has metadata: {'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: registered component (baseresource) on: ChildClient
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: completed processing for (ChildClient) - metadata: {'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:38:48 | DEBUG | DeclarativeClient: found resource (baseresource) on: ChildClient
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (ChildClient) - metadata: {'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test'}
2025-03-24 17:38:48 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {}
2025-03-24 17:38:48 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (Nested)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Nested)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (Nested)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (Nested) - metadata: {}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: found callable (method) on: Test
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: registered method (method) on: Test
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: found class (Nested) on (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: class (Nested) has metadata: {'value': 'test', 'components': {}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102900540>}}
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: registered component (nested) on: Test
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'value': 'test', 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102900540>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test', 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102900540>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 17:38:48 | DEBUG | container: converted (Test) to declarative container
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 17:38:48 | DEBUG | container: converted (Test) to declarative container
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:38:48 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: TestResource
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'path': '/test', 'name': 'test_resource', 'components': {}, 'methods': {}}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'path': '/test', 'name': 'test_resource', 'components': {}, 'methods': {}}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (GrandChild)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (GrandChild)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: starting attribute processing for (GrandChild)
2025-03-24 17:38:48 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: GrandChild
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (components) container for (GrandChild)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (methods) container for (GrandChild)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: completed processing for (GrandChild) - metadata: {'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 17:38:48 | DEBUG | DeclarativeResource: set name to (grandchild) for: GrandChild
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'path': 'grandchild', 'components': {}, 'methods': {}, 'name': 'grandchild'}
2025-03-24 17:38:48 | DEBUG | resource: converted (GrandChild) to declarative resource
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Child)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: starting attribute processing for (Child)
2025-03-24 17:38:48 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Child
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: found class (GrandChild) on (Child)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: class (GrandChild) has metadata: {'path': 'child', 'components': {}, 'methods': {}, 'name': 'grandchild'}
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: registered component (grandchild) on: Child
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: completed processing for (Child) - metadata: {'path': 'child', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'name': 'grandchild', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'path': 'child', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'name': 'grandchild', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 17:38:48 | DEBUG | resource: converted (Child) to declarative resource
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Parent)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: starting attribute processing for (Parent)
2025-03-24 17:38:48 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Parent
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: found class (Child) on (Parent)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: class (Child) has metadata: {'path': '/parent', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'name': 'grandchild', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: registered component (grandchild) on: Parent
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: completed processing for (Parent) - metadata: {'path': '/parent', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'name': 'grandchild', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'path': '/parent', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'name': 'grandchild', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 17:38:48 | DEBUG | DeclarativeResource: set name to (test) for: Test
2025-03-24 17:38:48 | DEBUG | DeclarativeResource: extracted path () from: Test
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'components': {}, 'methods': {}, 'name': 'test', 'path': ''}
2025-03-24 17:38:48 | DEBUG | resource: converted (Test) to declarative resource
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: found callable (test_method) on: TestResource
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: registered method (test_method) on: TestResource
2025-03-24 17:38:48 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x102900220>}}
2025-03-24 17:38:48 | DEBUG | DeclarativeResource: set name to (testresource) for: TestResource
2025-03-24 17:38:48 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 17:38:48 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x102900220>}, 'name': 'testresource', 'path': ''}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (TestComponent)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (TestComponent)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (TestComponent)
2025-03-24 17:40:31 | DEBUG | DeclarativeComponent: Processing Attribute (attribute) on: TestComponent
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (TestComponent) - metadata: {'attribute': 'value'}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Parent)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:40:31 | DEBUG | DeclarativeComponent: Processing Attribute (parent_attr) on: Parent
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'parent_attr': 'parent'}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (Parent) to (Child)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:40:31 | DEBUG | DeclarativeComponent: Processing Attribute (child_attr) on: Child
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (NestedComponent)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (NestedComponent)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (NestedComponent)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (NestedComponent) - metadata: {}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: found callable (method) on: Container
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: registered method (method) on: Container
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: found class (NestedComponent) on (Container)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: class (NestedComponent) has metadata: {'components': {}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104be99e0>}}
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: registered component (nestedcomponent) on: Container
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104be99e0>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104be99e0>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeComponent: Processing Attribute (attr) on: Test
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'attr': 'value'}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (Declarative)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Declarative)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (Declarative)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (Declarative) - metadata: {}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (Source)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Source)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (Source)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (Source) - metadata: {}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (Target)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Target)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (Target)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (Target) - metadata: {'a': 1, 'b': 2}
2025-03-24 17:40:31 | DEBUG | copymetadata: Copied metadata from (Source) to (Target)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (Component)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Component)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (Component)
2025-03-24 17:40:31 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: Component
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (Component) - metadata: {'name': 'mycomponent'}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: found class (Component) on (Container)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: class (Component) has metadata: {'name': 'mycomponent', 'components': {}, 'methods': {}}
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Container
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'components': {}, 'methods': {}}
2025-03-24 17:40:31 | DEBUG | DeclarativeResource: set name to (testresource) for: TestResource
2025-03-24 17:40:31 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'components': {}, 'methods': {}, 'name': 'testresource', 'path': ''}
2025-03-24 17:40:31 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:40:31 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: TestClient
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'components': {}, 'methods': {}, 'name': 'testresource', 'path': '', 'baseurl': 'https://api.test.com'}
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: registered component (testresource) on: TestClient
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'name': 'testresource', 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>}
2025-03-24 17:40:31 | DEBUG | DeclarativeClient: found resource (testresource) on: TestClient
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'name': 'testresource', 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:40:31 | DEBUG | DeclarativeResource: set name to (testresource) for: TestResource
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'path': '/test', 'components': {}, 'methods': {}, 'name': 'testresource'}
2025-03-24 17:40:31 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: found class (TestResource) on (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'path': '/test', 'components': {}, 'methods': {}, 'name': 'testresource'}
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: registered component (testresource) on: Test
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'name': 'testresource', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>}
2025-03-24 17:40:31 | DEBUG | DeclarativeClient: extracted baseurl () from: Test
2025-03-24 17:40:31 | DEBUG | DeclarativeClient: found resource (testresource) on: Test
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'name': 'testresource', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'baseurl': '', 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 17:40:31 | DEBUG | client: converted (Test) to declarative client
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:40:31 | DEBUG | DeclarativeResource: set name to (testresource) for: TestResource
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'path': '/test', 'components': {}, 'methods': {}, 'name': 'testresource'}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'path': '/test', 'components': {}, 'methods': {}, 'name': 'myresource'}
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: registered component (myresource) on: TestClient
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'name': 'myresource', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>}
2025-03-24 17:40:31 | DEBUG | DeclarativeClient: extracted baseurl () from: TestClient
2025-03-24 17:40:31 | DEBUG | DeclarativeClient: found resource (myresource) on: TestClient
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'name': 'myresource', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'baseurl': '', 'resources': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}}
2025-03-24 17:40:31 | DEBUG | client: converted (TestClient) to declarative client
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (BaseResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (BaseResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: BaseResource
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (components) container for (BaseResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (BaseResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: completed processing for (BaseResource) - metadata: {'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 17:40:31 | DEBUG | DeclarativeResource: set name to (baseresource) for: BaseResource
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'path': '/base', 'components': {}, 'methods': {}, 'name': 'baseresource'}
2025-03-24 17:40:31 | DEBUG | resource: converted (BaseResource) to declarative resource
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (BaseClient)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (BaseClient)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (BaseClient)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseClient)
2025-03-24 17:40:31 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: BaseClient
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: found class (BaseResource) on (BaseClient)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: class (BaseResource) has metadata: {'path': '/base', 'components': {}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com'}
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: registered component (baseresource) on: BaseClient
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: completed processing for (BaseClient) - metadata: {'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>}
2025-03-24 17:40:31 | DEBUG | DeclarativeClient: found resource (baseresource) on: BaseClient
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (BaseClient) - metadata: {'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (ChildResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (ChildResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: ChildResource
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: completed processing for (ChildResource) - metadata: {'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:40:31 | DEBUG | resource: converted (ChildResource) to declarative resource
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (ChildClient)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (BaseClient) to (ChildClient)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (ChildClient)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildClient)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: found class (ChildResource) on (ChildClient)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: class (ChildResource) has metadata: {'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: registered component (baseresource) on: ChildClient
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: completed processing for (ChildClient) - metadata: {'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:40:31 | DEBUG | DeclarativeClient: found resource (baseresource) on: ChildClient
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (ChildClient) - metadata: {'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test'}
2025-03-24 17:40:31 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {}
2025-03-24 17:40:31 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (Nested)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Nested)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (Nested)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (Nested) - metadata: {}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: found callable (method) on: Test
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: registered method (method) on: Test
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: found class (Nested) on (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: class (Nested) has metadata: {'value': 'test', 'components': {}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x104c104a0>}}
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: registered component (nested) on: Test
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'value': 'test', 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x104c104a0>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test', 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x104c104a0>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 17:40:31 | DEBUG | container: converted (Test) to declarative container
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 17:40:31 | DEBUG | container: converted (Test) to declarative container
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:40:31 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: TestResource
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'path': '/test', 'name': 'test_resource', 'components': {}, 'methods': {}}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'path': '/test', 'name': 'test_resource', 'components': {}, 'methods': {}}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (GrandChild)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (GrandChild)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: starting attribute processing for (GrandChild)
2025-03-24 17:40:31 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: GrandChild
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (components) container for (GrandChild)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (GrandChild)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: completed processing for (GrandChild) - metadata: {'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 17:40:31 | DEBUG | DeclarativeResource: set name to (grandchild) for: GrandChild
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'path': 'grandchild', 'components': {}, 'methods': {}, 'name': 'grandchild'}
2025-03-24 17:40:31 | DEBUG | resource: converted (GrandChild) to declarative resource
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Child)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: starting attribute processing for (Child)
2025-03-24 17:40:31 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Child
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: found class (GrandChild) on (Child)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: class (GrandChild) has metadata: {'path': 'child', 'components': {}, 'methods': {}, 'name': 'grandchild'}
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: registered component (grandchild) on: Child
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: completed processing for (Child) - metadata: {'path': 'child', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'name': 'grandchild', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'path': 'child', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'name': 'grandchild', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 17:40:31 | DEBUG | resource: converted (Child) to declarative resource
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Parent)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: starting attribute processing for (Parent)
2025-03-24 17:40:31 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Parent
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: found class (Child) on (Parent)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: class (Child) has metadata: {'path': '/parent', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'name': 'grandchild', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: registered component (grandchild) on: Parent
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: completed processing for (Parent) - metadata: {'path': '/parent', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'name': 'grandchild', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'path': '/parent', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'name': 'grandchild', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 17:40:31 | DEBUG | DeclarativeResource: set name to (test) for: Test
2025-03-24 17:40:31 | DEBUG | DeclarativeResource: extracted path () from: Test
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'components': {}, 'methods': {}, 'name': 'test', 'path': ''}
2025-03-24 17:40:31 | DEBUG | resource: converted (Test) to declarative resource
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: found callable (test_method) on: TestResource
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: registered method (test_method) on: TestResource
2025-03-24 17:40:31 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x104c107c0>}}
2025-03-24 17:40:31 | DEBUG | DeclarativeResource: set name to (testresource) for: TestResource
2025-03-24 17:40:31 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 17:40:31 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x104c107c0>}, 'name': 'testresource', 'path': ''}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (TestComponent)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (TestComponent)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (TestComponent)
2025-03-24 17:42:31 | DEBUG | DeclarativeComponent: Processing Attribute (attribute) on: TestComponent
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (TestComponent) - metadata: {'attribute': 'value'}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Parent)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:42:31 | DEBUG | DeclarativeComponent: Processing Attribute (parent_attr) on: Parent
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'parent_attr': 'parent'}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (Parent) to (Child)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:42:31 | DEBUG | DeclarativeComponent: Processing Attribute (child_attr) on: Child
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (NestedComponent)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (NestedComponent)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (NestedComponent)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (NestedComponent) - metadata: {}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: found callable (method) on: Container
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: registered method (method) on: Container
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: found class (NestedComponent) on (Container)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: class (NestedComponent) has metadata: {'components': {}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10504d9e0>}}
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: registered component (nestedcomponent) on: Container
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10504d9e0>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10504d9e0>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeComponent: Processing Attribute (attr) on: Test
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'attr': 'value'}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (Declarative)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Declarative)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (Declarative)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (Declarative) - metadata: {}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (Source)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Source)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (Source)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (Source) - metadata: {}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (Target)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Target)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (Target)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (Target) - metadata: {'a': 1, 'b': 2}
2025-03-24 17:42:31 | DEBUG | copymetadata: Copied metadata from (Source) to (Target)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (Component)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Component)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (Component)
2025-03-24 17:42:31 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: Component
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (Component) - metadata: {'name': 'mycomponent'}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: found class (Component) on (Container)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: class (Component) has metadata: {'name': 'mycomponent', 'components': {}, 'methods': {}}
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Container
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'components': {}, 'methods': {}}
2025-03-24 17:42:31 | DEBUG | DeclarativeResource: set name to (testresource) for: TestResource
2025-03-24 17:42:31 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'components': {}, 'methods': {}, 'name': 'testresource', 'path': ''}
2025-03-24 17:42:31 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:42:31 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: TestClient
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'components': {}, 'methods': {}, 'name': 'testresource', 'path': '', 'baseurl': 'https://api.test.com'}
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: registered component (testresource) on: TestClient
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'name': 'testresource', 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>}
2025-03-24 17:42:31 | DEBUG | DeclarativeClient: found resource (testresource) on: TestClient
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'name': 'testresource', 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:42:31 | DEBUG | DeclarativeResource: set name to (testresource) for: TestResource
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'path': '/test', 'components': {}, 'methods': {}, 'name': 'testresource'}
2025-03-24 17:42:31 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: found class (TestResource) on (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'path': '/test', 'components': {}, 'methods': {}, 'name': 'testresource'}
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: registered component (testresource) on: Test
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'name': 'testresource', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>}
2025-03-24 17:42:31 | DEBUG | DeclarativeClient: extracted baseurl () from: Test
2025-03-24 17:42:31 | DEBUG | DeclarativeClient: found resource (testresource) on: Test
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'name': 'testresource', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'baseurl': '', 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 17:42:31 | DEBUG | client: converted (Test) to declarative client
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:42:31 | DEBUG | DeclarativeResource: set name to (testresource) for: TestResource
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'path': '/test', 'components': {}, 'methods': {}, 'name': 'testresource'}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'path': '/test', 'components': {}, 'methods': {}, 'name': 'myresource'}
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: registered component (myresource) on: TestClient
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'name': 'myresource', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>}
2025-03-24 17:42:31 | DEBUG | DeclarativeClient: extracted baseurl () from: TestClient
2025-03-24 17:42:31 | DEBUG | DeclarativeClient: found resource (myresource) on: TestClient
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'name': 'myresource', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'baseurl': '', 'resources': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}}
2025-03-24 17:42:31 | DEBUG | client: converted (TestClient) to declarative client
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (BaseResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (BaseResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: BaseResource
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (components) container for (BaseResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (BaseResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: completed processing for (BaseResource) - metadata: {'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 17:42:31 | DEBUG | DeclarativeResource: set name to (baseresource) for: BaseResource
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'path': '/base', 'components': {}, 'methods': {}, 'name': 'baseresource'}
2025-03-24 17:42:31 | DEBUG | resource: converted (BaseResource) to declarative resource
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (BaseClient)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (BaseClient)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (BaseClient)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseClient)
2025-03-24 17:42:31 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: BaseClient
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: found class (BaseResource) on (BaseClient)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: class (BaseResource) has metadata: {'path': '/base', 'components': {}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com'}
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: registered component (baseresource) on: BaseClient
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: completed processing for (BaseClient) - metadata: {'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>}
2025-03-24 17:42:31 | DEBUG | DeclarativeClient: found resource (baseresource) on: BaseClient
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (BaseClient) - metadata: {'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (ChildResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (ChildResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: ChildResource
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: completed processing for (ChildResource) - metadata: {'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:42:31 | DEBUG | resource: converted (ChildResource) to declarative resource
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (ChildClient)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (BaseClient) to (ChildClient)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (ChildClient)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildClient)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: found class (ChildResource) on (ChildClient)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: class (ChildResource) has metadata: {'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: registered component (baseresource) on: ChildClient
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: completed processing for (ChildClient) - metadata: {'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:42:31 | DEBUG | DeclarativeClient: found resource (baseresource) on: ChildClient
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (ChildClient) - metadata: {'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'name': 'baseresource', 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test'}
2025-03-24 17:42:31 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {}
2025-03-24 17:42:31 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (Nested)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Nested)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (Nested)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (Nested) - metadata: {}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: found callable (method) on: Test
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: registered method (method) on: Test
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: found class (Nested) on (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: class (Nested) has metadata: {'value': 'test', 'components': {}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1050844a0>}}
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: registered component (nested) on: Test
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'value': 'test', 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1050844a0>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test', 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1050844a0>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 17:42:31 | DEBUG | container: converted (Test) to declarative container
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 17:42:31 | DEBUG | container: converted (Test) to declarative container
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:42:31 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: TestResource
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'path': '/test', 'name': 'test_resource', 'components': {}, 'methods': {}}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'path': '/test', 'name': 'test_resource', 'components': {}, 'methods': {}}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (GrandChild)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (GrandChild)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: starting attribute processing for (GrandChild)
2025-03-24 17:42:31 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: GrandChild
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (components) container for (GrandChild)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (GrandChild)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: completed processing for (GrandChild) - metadata: {'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 17:42:31 | DEBUG | DeclarativeResource: set name to (grandchild) for: GrandChild
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'path': 'grandchild', 'components': {}, 'methods': {}, 'name': 'grandchild'}
2025-03-24 17:42:31 | DEBUG | resource: converted (GrandChild) to declarative resource
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Child)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: starting attribute processing for (Child)
2025-03-24 17:42:31 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Child
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: found class (GrandChild) on (Child)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: class (GrandChild) has metadata: {'path': 'child', 'components': {}, 'methods': {}, 'name': 'grandchild'}
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: registered component (grandchild) on: Child
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: completed processing for (Child) - metadata: {'path': 'child', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'name': 'grandchild', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'path': 'child', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'name': 'grandchild', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 17:42:31 | DEBUG | resource: converted (Child) to declarative resource
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Parent)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: starting attribute processing for (Parent)
2025-03-24 17:42:31 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Parent
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: found class (Child) on (Parent)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: class (Child) has metadata: {'path': '/parent', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'name': 'grandchild', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: registered component (grandchild) on: Parent
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: completed processing for (Parent) - metadata: {'path': '/parent', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'name': 'grandchild', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'path': '/parent', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'name': 'grandchild', 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 17:42:31 | DEBUG | DeclarativeResource: set name to (test) for: Test
2025-03-24 17:42:31 | DEBUG | DeclarativeResource: extracted path () from: Test
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'components': {}, 'methods': {}, 'name': 'test', 'path': ''}
2025-03-24 17:42:31 | DEBUG | resource: converted (Test) to declarative resource
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: found callable (test_method) on: TestResource
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: registered method (test_method) on: TestResource
2025-03-24 17:42:31 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x105084720>}}
2025-03-24 17:42:31 | DEBUG | DeclarativeResource: set name to (testresource) for: TestResource
2025-03-24 17:42:31 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 17:42:31 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x105084720>}, 'name': 'testresource', 'path': ''}
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: creating class (TestComponent)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (TestComponent)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: processing attributes for (TestComponent)
2025-03-24 17:43:55 | DEBUG | DeclarativeComponent: Processing Attribute (attribute) on: TestComponent
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: completed creation of (TestComponent) - metadata: {'attribute': 'value'}
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Parent)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:43:55 | DEBUG | DeclarativeComponent: Processing Attribute (parent_attr) on: Parent
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'parent_attr': 'parent'}
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: copyinh metadata from base (Parent) to (Child)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:43:55 | DEBUG | DeclarativeComponent: Processing Attribute (child_attr) on: Child
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: creating class (NestedComponent)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (NestedComponent)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: processing attributes for (NestedComponent)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: completed creation of (NestedComponent) - metadata: {}
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: found callable (method) on: Container
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: registered method (method) on: Container
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: found class (NestedComponent) on (Container)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: class (NestedComponent) has metadata: {'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10470d9e0>}, 'components': {}}
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: registered component (nestedcomponent) on: Container
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10470d9e0>}, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10470d9e0>}, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:43:55 | DEBUG | DeclarativeComponent: Processing Attribute (attr) on: Test
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'attr': 'value'}
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: creating class (Declarative)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Declarative)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: processing attributes for (Declarative)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: completed creation of (Declarative) - metadata: {}
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: creating class (Source)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Source)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: processing attributes for (Source)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: completed creation of (Source) - metadata: {}
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: creating class (Target)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Target)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: processing attributes for (Target)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: completed creation of (Target) - metadata: {'a': 1, 'b': 2}
2025-03-24 17:43:55 | DEBUG | copymetadata: Copied metadata from (Source) to (Target)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: creating class (Component)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Component)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: processing attributes for (Component)
2025-03-24 17:43:55 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: Component
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: completed creation of (Component) - metadata: {'name': 'mycomponent'}
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: found class (Component) on (Container)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: class (Component) has metadata: {'name': 'mycomponent', 'methods': {}, 'components': {}}
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Container
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'name': 'mycomponent', 'methods': {}, 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'name': 'mycomponent', 'methods': {}, 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:43:55 | DEBUG | DeclarativeResource: set name to (testresource) for: TestResource
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'methods': {}, 'components': {}}
2025-03-24 17:43:55 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'methods': {}, 'components': {}, 'path': ''}
2025-03-24 17:43:55 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:43:55 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: TestClient
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'methods': {}, 'components': {}, 'path': '', 'baseurl': 'https://api.test.com'}
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: registered component (testresource) on: TestClient
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'testresource', 'methods': {}, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>}
2025-03-24 17:43:55 | DEBUG | DeclarativeClient: found resource (testresource) on: TestClient
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'name': 'testresource', 'methods': {}, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:43:55 | DEBUG | DeclarativeResource: set name to (testresource) for: TestResource
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:43:55 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 17:43:55 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (Test)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: found class (TestResource) on (Test)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: registered component (testresource) on: Test
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>}
2025-03-24 17:43:55 | DEBUG | DeclarativeClient: extracted baseurl () from: Test
2025-03-24 17:43:55 | DEBUG | DeclarativeClient: found resource (testresource) on: Test
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'baseurl': '', 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 17:43:55 | DEBUG | client: converted (Test) to declarative client
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:43:55 | DEBUG | DeclarativeResource: set name to (testresource) for: TestResource
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:43:55 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'myresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: registered component (myresource) on: TestClient
2025-03-24 17:43:55 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'myresource', 'path': '/test', 'methods': {}, 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>}
2025-03-24 17:43:55 | DEBUG | DeclarativeClient: extracted baseurl () from: TestClient
2025-03-24 17:43:55 | DEBUG | DeclarativeClient: found resource (myresource) on: TestClient
2025-03-24 17:43:55 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'name': 'myresource', 'path': '/test', 'methods': {}, 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'baseurl': '', 'resources': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}}
2025-03-24 17:43:55 | DEBUG | client: converted (TestClient) to declarative client
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: creating class (BaseResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (BaseResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeResource: set name to (baseresource) for: BaseResource
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: BaseResource
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: initialized (methods) container for (BaseResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: initialized (components) container for (BaseResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: completed processing for (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'methods': {}, 'components': {}}
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'methods': {}, 'components': {}}
2025-03-24 17:43:56 | DEBUG | resource: converted (BaseResource) to declarative resource
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: creating class (BaseClient)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (BaseClient)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: processing attributes for (BaseClient)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseClient)
2025-03-24 17:43:56 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: BaseClient
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: found class (BaseResource) on (BaseClient)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: class (BaseResource) has metadata: {'name': 'baseresource', 'path': '/base', 'methods': {}, 'components': {}, 'baseurl': 'https://api.base.com'}
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: registered component (baseresource) on: BaseClient
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: completed processing for (BaseClient) - metadata: {'name': 'baseresource', 'path': '/base', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>}
2025-03-24 17:43:56 | DEBUG | DeclarativeClient: found resource (baseresource) on: BaseClient
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: completed creation of (BaseClient) - metadata: {'name': 'baseresource', 'path': '/base', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: creating class (ChildResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (ChildResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: ChildResource
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: completed processing for (ChildResource) - metadata: {'name': 'baseresource', 'path': '/child', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'name': 'baseresource', 'path': '/child', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:43:56 | DEBUG | resource: converted (ChildResource) to declarative resource
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: creating class (ChildClient)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: copyinh metadata from base (BaseClient) to (ChildClient)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: processing attributes for (ChildClient)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildClient)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: found class (ChildResource) on (ChildClient)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: class (ChildResource) has metadata: {'name': 'baseresource', 'path': '/child', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: registered component (baseresource) on: ChildClient
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: completed processing for (ChildClient) - metadata: {'name': 'baseresource', 'path': '/child', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:43:56 | DEBUG | DeclarativeClient: found resource (baseresource) on: ChildClient
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: completed creation of (ChildClient) - metadata: {'name': 'baseresource', 'path': '/child', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}}
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test'}
2025-03-24 17:43:56 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {}
2025-03-24 17:43:56 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: creating class (Nested)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Nested)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: processing attributes for (Nested)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: completed creation of (Nested) - metadata: {}
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: found callable (method) on: Test
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: registered method (method) on: Test
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: found class (Nested) on (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: class (Nested) has metadata: {'value': 'test', 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1047444a0>}, 'components': {}}
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: registered component (nested) on: Test
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'value': 'test', 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1047444a0>}, 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test', 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1047444a0>}, 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 17:43:56 | DEBUG | container: converted (Test) to declarative container
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'methods': {}, 'components': {}}
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'methods': {}, 'components': {}}
2025-03-24 17:43:56 | DEBUG | container: converted (Test) to declarative container
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeResource: set name to (testresource) for: TestResource
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:43:56 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: TestResource
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: creating class (GrandChild)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (GrandChild)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 17:43:56 | DEBUG | DeclarativeResource: set name to (grandchild) for: GrandChild
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: starting attribute processing for (GrandChild)
2025-03-24 17:43:56 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: GrandChild
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: initialized (methods) container for (GrandChild)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: initialized (components) container for (GrandChild)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: completed processing for (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'methods': {}, 'components': {}}
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'methods': {}, 'components': {}}
2025-03-24 17:43:56 | DEBUG | resource: converted (GrandChild) to declarative resource
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Child)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: starting attribute processing for (Child)
2025-03-24 17:43:56 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Child
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: found class (GrandChild) on (Child)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: class (GrandChild) has metadata: {'name': 'grandchild', 'path': 'child', 'methods': {}, 'components': {}}
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: registered component (grandchild) on: Child
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: completed processing for (Child) - metadata: {'name': 'grandchild', 'path': 'child', 'methods': {}, 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'name': 'grandchild', 'path': 'child', 'methods': {}, 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 17:43:56 | DEBUG | resource: converted (Child) to declarative resource
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Parent)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: starting attribute processing for (Parent)
2025-03-24 17:43:56 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Parent
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: found class (Child) on (Parent)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: class (Child) has metadata: {'name': 'grandchild', 'path': '/parent', 'methods': {}, 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: registered component (grandchild) on: Parent
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: completed processing for (Parent) - metadata: {'name': 'grandchild', 'path': '/parent', 'methods': {}, 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'name': 'grandchild', 'path': '/parent', 'methods': {}, 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeResource: set name to (test) for: Test
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'test', 'methods': {}, 'components': {}}
2025-03-24 17:43:56 | DEBUG | DeclarativeResource: extracted path () from: Test
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'name': 'test', 'methods': {}, 'components': {}, 'path': ''}
2025-03-24 17:43:56 | DEBUG | resource: converted (Test) to declarative resource
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeResource: set name to (testresource) for: TestResource
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: found callable (test_method) on: TestResource
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: registered method (test_method) on: TestResource
2025-03-24 17:43:56 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x104744720>}, 'components': {}}
2025-03-24 17:43:56 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 17:43:56 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x104744720>}, 'components': {}, 'path': ''}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (TestComponent)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (TestComponent)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (TestComponent)
2025-03-24 17:47:35 | DEBUG | DeclarativeComponent: Processing Attribute (attribute) on: TestComponent
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (TestComponent) - metadata: {'attribute': 'value'}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Parent)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:47:35 | DEBUG | DeclarativeComponent: Processing Attribute (parent_attr) on: Parent
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'parent_attr': 'parent'}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (Parent) to (Child)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:47:35 | DEBUG | DeclarativeComponent: Processing Attribute (child_attr) on: Child
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (NestedComponent)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (NestedComponent)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (NestedComponent)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (NestedComponent) - metadata: {}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: found callable (method) on: Container
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: registered method (method) on: Container
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: found class (NestedComponent) on (Container)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: class (NestedComponent) has metadata: {'components': {}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102f959e0>}}
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: registered component (nestedcomponent) on: Container
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102f959e0>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102f959e0>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeComponent: Processing Attribute (attr) on: Test
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'attr': 'value'}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (Declarative)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Declarative)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (Declarative)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (Declarative) - metadata: {}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (Source)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Source)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (Source)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (Source) - metadata: {}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (Target)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Target)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (Target)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (Target) - metadata: {'a': 1, 'b': 2}
2025-03-24 17:47:35 | DEBUG | copymetadata: Copied metadata from (Source) to (Target)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (Component)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Component)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (Component)
2025-03-24 17:47:35 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: Component
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (Component) - metadata: {'name': 'mycomponent'}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: found class (Component) on (Container)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: class (Component) has metadata: {'name': 'mycomponent', 'components': {}, 'methods': {}}
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Container
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {}}
2025-03-24 17:47:35 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 17:47:35 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:47:35 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: TestClient
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'components': {}, 'methods': {}, 'path': '', 'baseurl': 'https://api.test.com'}
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: registered component (testresource) on: TestClient
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'testresource', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>}
2025-03-24 17:47:35 | DEBUG | DeclarativeClient: found resource (testresource) on: TestClient
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'name': 'testresource', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:47:35 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: found class (TestResource) on (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: registered component (testresource) on: Test
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'testresource', 'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>}
2025-03-24 17:47:35 | DEBUG | DeclarativeClient: extracted baseurl () from: Test
2025-03-24 17:47:35 | DEBUG | DeclarativeClient: found resource (testresource) on: Test
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'name': 'testresource', 'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'baseurl': '', 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 17:47:35 | DEBUG | client: converted (Test) to declarative client
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'myresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: registered component (myresource) on: TestClient
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'myresource', 'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>}
2025-03-24 17:47:35 | DEBUG | DeclarativeClient: extracted baseurl () from: TestClient
2025-03-24 17:47:35 | DEBUG | DeclarativeClient: found resource (myresource) on: TestClient
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'name': 'myresource', 'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'baseurl': '', 'resources': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}}
2025-03-24 17:47:35 | DEBUG | client: converted (TestClient) to declarative client
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (BaseResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: set resource name (baseresource) for: BaseResource
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (BaseResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: BaseResource
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (components) container for (BaseResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (methods) container for (BaseResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: completed processing for (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 17:47:35 | DEBUG | resource: converted (BaseResource) to declarative resource
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (BaseClient)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (BaseClient)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (BaseClient)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseClient)
2025-03-24 17:47:35 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: BaseClient
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: found class (BaseResource) on (BaseClient)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: class (BaseResource) has metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}, 'baseurl': 'https://api.base.com'}
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: registered component (baseresource) on: BaseClient
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: completed processing for (BaseClient) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>}
2025-03-24 17:47:35 | DEBUG | DeclarativeClient: found resource (baseresource) on: BaseClient
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (BaseClient) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (ChildResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: set resource name (childresource) for: ChildResource
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (ChildResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: ChildResource
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: completed processing for (ChildResource) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:47:35 | DEBUG | resource: converted (ChildResource) to declarative resource
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (ChildClient)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (BaseClient) to (ChildClient)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (ChildClient)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildClient)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: found class (ChildResource) on (ChildClient)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: class (ChildResource) has metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: registered component (childresource) on: ChildClient
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: completed processing for (ChildClient) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:47:35 | DEBUG | DeclarativeClient: found resource (childresource) on: ChildClient
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (ChildClient) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test'}
2025-03-24 17:47:35 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {}
2025-03-24 17:47:35 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (Nested)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Nested)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (Nested)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (Nested) - metadata: {}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: found callable (method) on: Test
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: registered method (method) on: Test
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: found class (Nested) on (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: class (Nested) has metadata: {'value': 'test', 'components': {}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102f94d60>}}
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: registered component (nested) on: Test
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'value': 'test', 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102f94d60>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test', 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102f94d60>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 17:47:35 | DEBUG | container: converted (Test) to declarative container
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 17:47:35 | DEBUG | container: converted (Test) to declarative container
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:47:35 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: TestResource
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (GrandChild)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: set resource name (grandchild) for: GrandChild
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (GrandChild)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: starting attribute processing for (GrandChild)
2025-03-24 17:47:35 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: GrandChild
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (components) container for (GrandChild)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (methods) container for (GrandChild)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: completed processing for (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 17:47:35 | DEBUG | resource: converted (GrandChild) to declarative resource
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: set resource name (child) for: Child
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Child)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: starting attribute processing for (Child)
2025-03-24 17:47:35 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Child
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: found class (GrandChild) on (Child)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: class (GrandChild) has metadata: {'name': 'child', 'path': 'child', 'components': {}, 'methods': {}}
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: registered component (child) on: Child
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: completed processing for (Child) - metadata: {'name': 'child', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'name': 'child', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 17:47:35 | DEBUG | resource: converted (Child) to declarative resource
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: set resource name (parent) for: Parent
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Parent)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: starting attribute processing for (Parent)
2025-03-24 17:47:35 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Parent
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: found class (Child) on (Parent)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: class (Child) has metadata: {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: registered component (parent) on: Parent
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: completed processing for (Parent) - metadata: {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: set resource name (test) for: Test
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'test', 'components': {}, 'methods': {}}
2025-03-24 17:47:35 | DEBUG | DeclarativeResource: extracted path () from: Test
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'name': 'test', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 17:47:35 | DEBUG | resource: converted (Test) to declarative resource
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: found callable (test_method) on: TestResource
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: registered method (test_method) on: TestResource
2025-03-24 17:47:35 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x102fcc5e0>}}
2025-03-24 17:47:35 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 17:47:35 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x102fcc5e0>}, 'path': ''}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (TestComponent)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (TestComponent)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (TestComponent)
2025-03-24 17:49:57 | DEBUG | DeclarativeComponent: Processing Attribute (attribute) on: TestComponent
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (TestComponent) - metadata: {'attribute': 'value'}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Parent)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:49:57 | DEBUG | DeclarativeComponent: Processing Attribute (parent_attr) on: Parent
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'parent_attr': 'parent'}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (Parent) to (Child)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:49:57 | DEBUG | DeclarativeComponent: Processing Attribute (child_attr) on: Child
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (NestedComponent)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (NestedComponent)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (NestedComponent)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (NestedComponent) - metadata: {}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (method) on (Container)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: found callable (method) on: Container
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: registered method (method) on: Container
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (NestedComponent) on (Container)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: found class (NestedComponent) on (Container)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: class (NestedComponent) has metadata: {'components': {}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102d49a80>}}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeComponent: Processing Attribute (attr) on: Test
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'attr': 'value'}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (Declarative)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Declarative)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (Declarative)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (Declarative) - metadata: {}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (Source)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Source)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (Source)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (Source) - metadata: {}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (Target)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Target)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (Target)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (Target) - metadata: {'a': 1, 'b': 2}
2025-03-24 17:49:57 | DEBUG | copymetadata: Copied metadata from (Source) to (Target)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (Component)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Component)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (Component)
2025-03-24 17:49:57 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: Component
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (Component) - metadata: {'name': 'mycomponent'}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (Component) on (Container)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: found class (Component) on (Container)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: class (Component) has metadata: {'name': 'mycomponent', 'components': {}, 'methods': {}}
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Container
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {}}
2025-03-24 17:49:57 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 17:49:57 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: TestClient
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (baseurl) on (TestClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (TestResource) on (TestClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'components': {}, 'methods': {}, 'path': '', 'baseurl': 'https://api.test.com'}
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: registered component (testresource) on: TestClient
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'testresource', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>}
2025-03-24 17:49:57 | DEBUG | DeclarativeClient: found resource (testresource) on: TestClient
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'name': 'testresource', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (path) on (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:49:57 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (TestResource) on (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: found class (TestResource) on (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: registered component (testresource) on: Test
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'testresource', 'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>}
2025-03-24 17:49:57 | DEBUG | DeclarativeClient: extracted baseurl () from: Test
2025-03-24 17:49:57 | DEBUG | DeclarativeClient: found resource (testresource) on: Test
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'name': 'testresource', 'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'baseurl': '', 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 17:49:57 | DEBUG | client: converted (Test) to declarative client
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (path) on (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (resource) on (TestClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'myresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: registered component (myresource) on: TestClient
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'myresource', 'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>}
2025-03-24 17:49:57 | DEBUG | DeclarativeClient: extracted baseurl () from: TestClient
2025-03-24 17:49:57 | DEBUG | DeclarativeClient: found resource (myresource) on: TestClient
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'name': 'myresource', 'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'baseurl': '', 'resources': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}}
2025-03-24 17:49:57 | DEBUG | client: converted (TestClient) to declarative client
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (BaseResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: set resource name (baseresource) for: BaseResource
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (BaseResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: BaseResource
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (components) container for (BaseResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (methods) container for (BaseResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (path) on (BaseResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: completed processing for (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 17:49:57 | DEBUG | resource: converted (BaseResource) to declarative resource
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (BaseClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (BaseClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (BaseClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: BaseClient
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (baseurl) on (BaseClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (BaseResource) on (BaseClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: found class (BaseResource) on (BaseClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: class (BaseResource) has metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}, 'baseurl': 'https://api.base.com'}
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: registered component (baseresource) on: BaseClient
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: completed processing for (BaseClient) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>}
2025-03-24 17:49:57 | DEBUG | DeclarativeClient: found resource (baseresource) on: BaseClient
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (BaseClient) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (ChildResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: set resource name (childresource) for: ChildResource
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (ChildResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: ChildResource
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (path) on (ChildResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: completed processing for (ChildResource) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:49:57 | DEBUG | resource: converted (ChildResource) to declarative resource
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (ChildClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (BaseClient) to (ChildClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (ChildClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (ChildResource) on (ChildClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: found class (ChildResource) on (ChildClient)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: class (ChildResource) has metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: registered component (childresource) on: ChildClient
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: completed processing for (ChildClient) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 17:49:57 | DEBUG | DeclarativeClient: found resource (childresource) on: ChildClient
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (ChildClient) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test'}
2025-03-24 17:49:57 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {}
2025-03-24 17:49:57 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (Nested)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Nested)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (Nested)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (Nested) - metadata: {}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (value) on (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (method) on (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: found callable (method) on: Test
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: registered method (method) on: Test
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (Nested) on (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: found class (Nested) on (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: class (Nested) has metadata: {'value': 'test', 'components': {}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102da89a0>}}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 17:49:57 | DEBUG | container: converted (Test) to declarative container
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 17:49:57 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: TestResource
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (path) on (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (name) on (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (GrandChild)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: set resource name (grandchild) for: GrandChild
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (GrandChild)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: starting attribute processing for (GrandChild)
2025-03-24 17:49:57 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: GrandChild
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (components) container for (GrandChild)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (methods) container for (GrandChild)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (path) on (GrandChild)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: completed processing for (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 17:49:57 | DEBUG | resource: converted (GrandChild) to declarative resource
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: set resource name (child) for: Child
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Child)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: starting attribute processing for (Child)
2025-03-24 17:49:57 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Child
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (path) on (Child)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (GrandChild) on (Child)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: found class (GrandChild) on (Child)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: class (GrandChild) has metadata: {'name': 'child', 'path': 'child', 'components': {}, 'methods': {}}
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: registered component (child) on: Child
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: completed processing for (Child) - metadata: {'name': 'child', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'name': 'child', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 17:49:57 | DEBUG | resource: converted (Child) to declarative resource
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: set resource name (parent) for: Parent
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Parent)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: starting attribute processing for (Parent)
2025-03-24 17:49:57 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Parent
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (path) on (Parent)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (Child) on (Parent)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: found class (Child) on (Parent)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: class (Child) has metadata: {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: registered component (parent) on: Parent
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: completed processing for (Parent) - metadata: {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: set resource name (test) for: Test
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'test', 'components': {}, 'methods': {}}
2025-03-24 17:49:57 | DEBUG | DeclarativeResource: extracted path () from: Test
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'name': 'test', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 17:49:57 | DEBUG | resource: converted (Test) to declarative resource
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: processing (test_method) on (TestResource)
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: found callable (test_method) on: TestResource
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: registered method (test_method) on: TestResource
2025-03-24 17:49:57 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x102da8f40>}}
2025-03-24 17:49:57 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 17:49:57 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x102da8f40>}, 'path': ''}
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: creating class (TestComponent)
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (TestComponent)
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: processing attributes for (TestComponent)
2025-03-24 18:00:03 | DEBUG | DeclarativeComponent: Processing Attribute (attribute) on: TestComponent
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: completed creation of (TestComponent) - metadata: {'attribute': 'value'}
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Parent)
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 18:00:03 | DEBUG | DeclarativeComponent: Processing Attribute (parent_attr) on: Parent
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'parent_attr': 'parent'}
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: copyinh metadata from base (Parent) to (Child)
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 18:00:03 | DEBUG | DeclarativeComponent: Processing Attribute (child_attr) on: Child
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: creating class (NestedComponent)
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (NestedComponent)
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: processing attributes for (NestedComponent)
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: completed creation of (NestedComponent) - metadata: {}
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 18:00:03 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 18:00:03 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 18:00:03 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 18:00:03 | DEBUG | DeclarativeContainer: found callable (method) on: Container
2025-03-24 18:00:03 | DEBUG | DeclarativeContainer: registered method (method) on: Container
2025-03-24 18:00:03 | DEBUG | DeclarativeContainer: found class (NestedComponent) on (Container)
2025-03-24 18:00:03 | DEBUG | DeclarativeContainer: class (NestedComponent) has metadata: {'components': {}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x106f359e0>}}
2025-03-24 18:00:03 | DEBUG | DeclarativeContainer: registered component (nestedcomponent) on: Container
2025-03-24 18:00:03 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x106f359e0>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x106f359e0>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 18:00:03 | DEBUG | DeclarativeComponent: Processing Attribute (attr) on: Test
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'attr': 'value'}
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: creating class (Declarative)
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Declarative)
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: processing attributes for (Declarative)
2025-03-24 18:00:03 | DEBUG | DeclarativeMeta: completed creation of (Declarative) - metadata: {}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (Source)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Source)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (Source)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (Source) - metadata: {}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (Target)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Target)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (Target)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (Target) - metadata: {'a': 1, 'b': 2}
2025-03-24 18:00:04 | DEBUG | copymetadata: Copied metadata from (Source) to (Target)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (Component)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Component)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (Component)
2025-03-24 18:00:04 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: Component
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (Component) - metadata: {'name': 'mycomponent'}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: found class (Component) on (Container)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: class (Component) has metadata: {'name': 'mycomponent', 'components': {}, 'methods': {}}
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Container
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {}}
2025-03-24 18:00:04 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 18:00:04 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: registered nested resource (testresource) on: TestClient
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 18:00:04 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: TestClient
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'path': '', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'baseurl': 'https://api.test.com'}
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: registered component (testresource) on: TestClient
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'testresource', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'path': '', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'baseurl': 'https://api.test.com'}
2025-03-24 18:00:04 | DEBUG | DeclarativeClient: found resource (testresource) on: TestClient
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'path': '', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'baseurl': 'https://api.test.com', 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 18:00:04 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: registered nested resource (testresource) on: Test
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: found class (TestResource) on (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>}
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: registered component (testresource) on: Test
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'testresource', 'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>}
2025-03-24 18:00:04 | DEBUG | DeclarativeClient: extracted baseurl () from: Test
2025-03-24 18:00:04 | DEBUG | DeclarativeClient: found resource (testresource) on: Test
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'baseurl': '', 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 18:00:04 | DEBUG | client: converted (Test) to declarative client
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: registered nested resource (myresource) on: TestClient
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (resource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'myresource', 'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>}
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: registered component (myresource) on: TestClient
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'myresource', 'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>}
2025-03-24 18:00:04 | DEBUG | DeclarativeClient: extracted baseurl () from: TestClient
2025-03-24 18:00:04 | DEBUG | DeclarativeClient: found resource (myresource) on: TestClient
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (resource) - metadata: {'name': 'myresource', 'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'baseurl': '', 'resources': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}}
2025-03-24 18:00:04 | DEBUG | client: converted (TestClient) to declarative client
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (BaseResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: set resource name (baseresource) for: BaseResource
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (BaseResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: BaseResource
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (components) container for (BaseResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (methods) container for (BaseResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: completed processing for (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 18:00:04 | DEBUG | resource: converted (BaseResource) to declarative resource
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (BaseClient)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (BaseClient)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: registered nested resource (baseresource) on: BaseClient
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseClient)
2025-03-24 18:00:04 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: BaseClient
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: found class (BaseResource) on (BaseClient)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: class (BaseResource) has metadata: {'name': 'baseresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'baseurl': 'https://api.base.com'}
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: registered component (baseresource) on: BaseClient
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: completed processing for (BaseClient) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'baseurl': 'https://api.base.com'}
2025-03-24 18:00:04 | DEBUG | DeclarativeClient: found resource (baseresource) on: BaseClient
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'baseurl': 'https://api.base.com', 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (ChildResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: set resource name (childresource) for: ChildResource
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (ChildResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: ChildResource
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: completed processing for (ChildResource) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'baseurl': 'https://api.base.com', 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'baseurl': 'https://api.base.com', 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 18:00:04 | DEBUG | resource: converted (ChildResource) to declarative resource
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (ChildClient)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (BaseClient) to (ChildClient)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: registered nested resource (childresource) on: ChildClient
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildClient)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: found class (ChildResource) on (ChildClient)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: class (ChildResource) has metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'baseurl': 'https://api.base.com', 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: registered component (childresource) on: ChildClient
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: completed processing for (ChildClient) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'baseurl': 'https://api.base.com', 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 18:00:04 | DEBUG | DeclarativeClient: found resource (childresource) on: ChildClient
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'baseurl': 'https://api.base.com', 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test'}
2025-03-24 18:00:04 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {}
2025-03-24 18:00:04 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (Nested)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Nested)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (Nested)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (Nested) - metadata: {}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: found callable (method) on: Test
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: registered method (method) on: Test
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: found class (Nested) on (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: class (Nested) has metadata: {'value': 'test', 'components': {}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x106f34d60>}}
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: registered component (nested) on: Test
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'value': 'test', 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x106f34d60>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test', 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x106f34d60>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 18:00:04 | DEBUG | container: converted (Test) to declarative container
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 18:00:04 | DEBUG | container: converted (Test) to declarative container
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 18:00:04 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: TestResource
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (GrandChild)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: set resource name (grandchild) for: GrandChild
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (GrandChild)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: starting attribute processing for (GrandChild)
2025-03-24 18:00:04 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: GrandChild
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (components) container for (GrandChild)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (methods) container for (GrandChild)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: completed processing for (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 18:00:04 | DEBUG | resource: converted (GrandChild) to declarative resource
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: set resource name (child) for: Child
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Child)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: registered nested resource (child) on: Child
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: starting attribute processing for (Child)
2025-03-24 18:00:04 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Child
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: found class (GrandChild) on (Child)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: class (GrandChild) has metadata: {'name': 'child', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: registered component (child) on: Child
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: completed processing for (Child) - metadata: {'name': 'child', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'name': 'child', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 18:00:04 | DEBUG | resource: converted (Child) to declarative resource
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: set resource name (parent) for: Parent
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Parent)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: registered nested resource (parent) on: Parent
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: starting attribute processing for (Parent)
2025-03-24 18:00:04 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Parent
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: found class (Child) on (Parent)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: class (Child) has metadata: {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: registered component (parent) on: Parent
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: completed processing for (Parent) - metadata: {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: set resource name (test) for: Test
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'test', 'components': {}, 'methods': {}}
2025-03-24 18:00:04 | DEBUG | DeclarativeResource: extracted path () from: Test
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'name': 'test', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 18:00:04 | DEBUG | resource: converted (Test) to declarative resource
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: found callable (test_method) on: TestResource
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: registered method (test_method) on: TestResource
2025-03-24 18:00:04 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x106f6c5e0>}}
2025-03-24 18:00:04 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 18:00:04 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x106f6c5e0>}, 'path': ''}
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: creating class (TestComponent)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (TestComponent)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: processing attributes for (TestComponent)
2025-03-24 18:14:29 | DEBUG | DeclarativeComponent: Processing Attribute (attribute) on: TestComponent
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: completed creation of (TestComponent) - metadata: {'attribute': 'value'}
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Parent)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 18:14:29 | DEBUG | DeclarativeComponent: Processing Attribute (parent_attr) on: Parent
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'parent_attr': 'parent'}
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: copyinh metadata from base (Parent) to (Child)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 18:14:29 | DEBUG | DeclarativeComponent: Processing Attribute (child_attr) on: Child
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: creating class (NestedComponent)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (NestedComponent)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: processing attributes for (NestedComponent)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: completed creation of (NestedComponent) - metadata: {}
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: found callable (method) on: Container
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: registered method (method) on: Container
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: found class (NestedComponent) on (Container)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: class (NestedComponent) has metadata: {'components': {}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104195b20>}}
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 18:14:29 | DEBUG | DeclarativeComponent: Processing Attribute (attr) on: Test
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'attr': 'value'}
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: creating class (Declarative)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Declarative)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: processing attributes for (Declarative)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: completed creation of (Declarative) - metadata: {}
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: creating class (Source)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Source)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: processing attributes for (Source)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: completed creation of (Source) - metadata: {}
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: creating class (Target)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Target)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: processing attributes for (Target)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: completed creation of (Target) - metadata: {'a': 1, 'b': 2}
2025-03-24 18:14:29 | DEBUG | copymetadata: Copied metadata from (Source) to (Target)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: creating class (Component)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Component)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: processing attributes for (Component)
2025-03-24 18:14:29 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: Component
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: completed creation of (Component) - metadata: {'name': 'mycomponent'}
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: found class (Component) on (Container)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: class (Component) has metadata: {'name': 'mycomponent', 'components': {}, 'methods': {}}
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Container
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {}}
2025-03-24 18:14:29 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 18:14:29 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 18:14:29 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: TestClient
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'components': {}, 'methods': {}, 'path': '', 'baseurl': 'https://api.test.com'}
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: registered component (testresource) on: TestClient
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'testresource', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>}
2025-03-24 18:14:29 | DEBUG | DeclarativeClient: found resource (testresource) on: TestClient
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'name': 'testresource', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 18:14:29 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 18:14:29 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (Test)
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: found class (TestResource) on (Test)
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: registered component (testresource) on: Test
2025-03-24 18:14:29 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'testresource', 'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>}
2025-03-24 18:14:29 | DEBUG | DeclarativeClient: extracted baseurl () from: Test
2025-03-24 18:14:29 | DEBUG | DeclarativeClient: found resource (testresource) on: Test
2025-03-24 18:14:29 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'name': 'testresource', 'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'baseurl': '', 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 18:14:29 | DEBUG | client: converted (Test) to declarative client
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'myresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: registered component (myresource) on: TestClient
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'myresource', 'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>}
2025-03-24 18:14:30 | DEBUG | DeclarativeClient: extracted baseurl () from: TestClient
2025-03-24 18:14:30 | DEBUG | DeclarativeClient: found resource (myresource) on: TestClient
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'name': 'myresource', 'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'baseurl': '', 'resources': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}}
2025-03-24 18:14:30 | DEBUG | client: converted (TestClient) to declarative client
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: creating class (BaseResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: set resource name (baseresource) for: BaseResource
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (BaseResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: BaseResource
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: initialized (components) container for (BaseResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: initialized (methods) container for (BaseResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: completed processing for (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 18:14:30 | DEBUG | resource: converted (BaseResource) to declarative resource
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: creating class (BaseClient)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (BaseClient)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: processing attributes for (BaseClient)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseClient)
2025-03-24 18:14:30 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: BaseClient
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: found class (BaseResource) on (BaseClient)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: class (BaseResource) has metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}, 'baseurl': 'https://api.base.com'}
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: registered component (baseresource) on: BaseClient
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: completed processing for (BaseClient) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>}
2025-03-24 18:14:30 | DEBUG | DeclarativeClient: found resource (baseresource) on: BaseClient
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: completed creation of (BaseClient) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: creating class (ChildResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (ChildResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: ChildResource
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: completed processing for (ChildResource) - metadata: {'name': 'baseresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'name': 'baseresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 18:14:30 | DEBUG | resource: converted (ChildResource) to declarative resource
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: creating class (ChildClient)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: copyinh metadata from base (BaseClient) to (ChildClient)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: processing attributes for (ChildClient)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildClient)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: found class (ChildResource) on (ChildClient)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: class (ChildResource) has metadata: {'name': 'baseresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: registered component (baseresource) on: ChildClient
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: completed processing for (ChildClient) - metadata: {'name': 'baseresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 18:14:30 | DEBUG | DeclarativeClient: found resource (baseresource) on: ChildClient
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: completed creation of (ChildClient) - metadata: {'name': 'baseresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}}
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test'}
2025-03-24 18:14:30 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {}
2025-03-24 18:14:30 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: creating class (Nested)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Nested)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: processing attributes for (Nested)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: completed creation of (Nested) - metadata: {}
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: found callable (method) on: Test
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: registered method (method) on: Test
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: found class (Nested) on (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: class (Nested) has metadata: {'value': 'test', 'components': {}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1041d4b80>}}
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 18:14:30 | DEBUG | container: converted (Test) to declarative container
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 18:14:30 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: TestResource
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: creating class (GrandChild)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: set resource name (grandchild) for: GrandChild
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (GrandChild)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: starting attribute processing for (GrandChild)
2025-03-24 18:14:30 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: GrandChild
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: initialized (components) container for (GrandChild)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: initialized (methods) container for (GrandChild)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: completed processing for (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 18:14:30 | DEBUG | resource: converted (GrandChild) to declarative resource
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Child)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: starting attribute processing for (Child)
2025-03-24 18:14:30 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Child
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: found class (GrandChild) on (Child)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: class (GrandChild) has metadata: {'name': 'grandchild', 'path': 'child', 'components': {}, 'methods': {}}
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: registered component (grandchild) on: Child
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: completed processing for (Child) - metadata: {'name': 'grandchild', 'path': 'child', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'name': 'grandchild', 'path': 'child', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 18:14:30 | DEBUG | resource: converted (Child) to declarative resource
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Parent)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: starting attribute processing for (Parent)
2025-03-24 18:14:30 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Parent
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: found class (Child) on (Parent)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: class (Child) has metadata: {'name': 'grandchild', 'path': '/parent', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: registered component (grandchild) on: Parent
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: completed processing for (Parent) - metadata: {'name': 'grandchild', 'path': '/parent', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'name': 'grandchild', 'path': '/parent', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: set resource name (test) for: Test
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'test', 'components': {}, 'methods': {}}
2025-03-24 18:14:30 | DEBUG | DeclarativeResource: extracted path () from: Test
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'name': 'test', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 18:14:30 | DEBUG | resource: converted (Test) to declarative resource
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: found callable (test_method) on: TestResource
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: registered method (test_method) on: TestResource
2025-03-24 18:14:30 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x1041d42c0>}}
2025-03-24 18:14:30 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 18:14:30 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x1041d42c0>}, 'path': ''}
2025-03-24 19:04:14 | DEBUG | DeclarativeMeta: creating class (TestComponent)
2025-03-24 19:04:14 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (TestComponent)
2025-03-24 19:04:14 | DEBUG | DeclarativeMeta: processing attributes for (TestComponent)
2025-03-24 19:04:14 | DEBUG | DeclarativeComponent: Processing Attribute (attribute) on: TestComponent
2025-03-24 19:04:14 | DEBUG | DeclarativeMeta: completed creation of (TestComponent) - metadata: {'attribute': 'value'}
2025-03-24 19:04:14 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 19:04:14 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Parent)
2025-03-24 19:04:14 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 19:04:14 | DEBUG | DeclarativeComponent: Processing Attribute (parent_attr) on: Parent
2025-03-24 19:04:14 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'parent_attr': 'parent'}
2025-03-24 19:04:14 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 19:04:14 | DEBUG | DeclarativeMeta: copyinh metadata from base (Parent) to (Child)
2025-03-24 19:04:14 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 19:04:14 | DEBUG | DeclarativeComponent: Processing Attribute (child_attr) on: Child
2025-03-24 19:04:14 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 19:04:14 | DEBUG | DeclarativeMeta: creating class (NestedComponent)
2025-03-24 19:04:14 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (NestedComponent)
2025-03-24 19:04:14 | DEBUG | DeclarativeMeta: processing attributes for (NestedComponent)
2025-03-24 19:04:14 | DEBUG | DeclarativeMeta: completed creation of (NestedComponent) - metadata: {}
2025-03-24 19:04:14 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 19:04:14 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 19:04:14 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 19:04:14 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 19:04:14 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 19:04:14 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 19:04:14 | DEBUG | DeclarativeContainer: found callable (method) on: Container
2025-03-24 19:04:14 | DEBUG | DeclarativeContainer: registered method (method) on: Container
2025-03-24 19:04:14 | DEBUG | DeclarativeContainer: found class (NestedComponent) on (Container)
2025-03-24 19:04:14 | DEBUG | DeclarativeContainer: class (NestedComponent) has metadata: {'components': {}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x106cf1b20>}}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeComponent: Processing Attribute (attr) on: Test
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'attr': 'value'}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (Declarative)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Declarative)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (Declarative)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (Declarative) - metadata: {}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (Source)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Source)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (Source)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (Source) - metadata: {}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (Target)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Target)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (Target)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (Target) - metadata: {'a': 1, 'b': 2}
2025-03-24 19:04:15 | DEBUG | copymetadata: Copied metadata from (Source) to (Target)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (Component)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Component)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (Component)
2025-03-24 19:04:15 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: Component
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (Component) - metadata: {'name': 'mycomponent'}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: found class (Component) on (Container)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: class (Component) has metadata: {'name': 'mycomponent', 'components': {}, 'methods': {}}
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Container
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {}}
2025-03-24 19:04:15 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 19:04:15 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 19:04:15 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: TestClient
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'components': {}, 'methods': {}, 'path': '', 'baseurl': 'https://api.test.com'}
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: registered component (testresource) on: TestClient
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'testresource', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>}
2025-03-24 19:04:15 | DEBUG | DeclarativeClient: found resource (testresource) on: TestClient
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'name': 'testresource', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:04:15 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: found class (TestResource) on (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: registered component (testresource) on: Test
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'testresource', 'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>}
2025-03-24 19:04:15 | DEBUG | DeclarativeClient: extracted baseurl () from: Test
2025-03-24 19:04:15 | DEBUG | DeclarativeClient: found resource (testresource) on: Test
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'name': 'testresource', 'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'baseurl': '', 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 19:04:15 | DEBUG | client: converted (Test) to declarative client
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'myresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: registered component (myresource) on: TestClient
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'myresource', 'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>}
2025-03-24 19:04:15 | DEBUG | DeclarativeClient: extracted baseurl () from: TestClient
2025-03-24 19:04:15 | DEBUG | DeclarativeClient: found resource (myresource) on: TestClient
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'name': 'myresource', 'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'baseurl': '', 'resources': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}}
2025-03-24 19:04:15 | DEBUG | client: converted (TestClient) to declarative client
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (BaseResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: set resource name (baseresource) for: BaseResource
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (BaseResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: BaseResource
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (components) container for (BaseResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (methods) container for (BaseResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: completed processing for (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 19:04:15 | DEBUG | resource: converted (BaseResource) to declarative resource
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (BaseClient)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (BaseClient)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (BaseClient)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseClient)
2025-03-24 19:04:15 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: BaseClient
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: found class (BaseResource) on (BaseClient)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: class (BaseResource) has metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}, 'baseurl': 'https://api.base.com'}
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: registered component (baseresource) on: BaseClient
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: completed processing for (BaseClient) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>}
2025-03-24 19:04:15 | DEBUG | DeclarativeClient: found resource (baseresource) on: BaseClient
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (BaseClient) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (ChildResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (ChildResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: ChildResource
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: completed processing for (ChildResource) - metadata: {'name': 'baseresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'name': 'baseresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:04:15 | DEBUG | resource: converted (ChildResource) to declarative resource
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (ChildClient)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (BaseClient) to (ChildClient)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (ChildClient)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildClient)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: found class (ChildResource) on (ChildClient)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: class (ChildResource) has metadata: {'name': 'baseresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: registered component (baseresource) on: ChildClient
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: completed processing for (ChildClient) - metadata: {'name': 'baseresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:04:15 | DEBUG | DeclarativeClient: found resource (baseresource) on: ChildClient
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (ChildClient) - metadata: {'name': 'baseresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test'}
2025-03-24 19:04:15 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {}
2025-03-24 19:04:15 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (Nested)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Nested)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (Nested)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (Nested) - metadata: {}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: found callable (method) on: Test
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: registered method (method) on: Test
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: found class (Nested) on (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: class (Nested) has metadata: {'value': 'test', 'components': {}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x106d34b80>}}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 19:04:15 | DEBUG | container: converted (Test) to declarative container
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:04:15 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: TestResource
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (GrandChild)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: set resource name (grandchild) for: GrandChild
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (GrandChild)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: starting attribute processing for (GrandChild)
2025-03-24 19:04:15 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: GrandChild
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (components) container for (GrandChild)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (methods) container for (GrandChild)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: completed processing for (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 19:04:15 | DEBUG | resource: converted (GrandChild) to declarative resource
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Child)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: starting attribute processing for (Child)
2025-03-24 19:04:15 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Child
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: found class (GrandChild) on (Child)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: class (GrandChild) has metadata: {'name': 'grandchild', 'path': 'child', 'components': {}, 'methods': {}}
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: registered component (grandchild) on: Child
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: completed processing for (Child) - metadata: {'name': 'grandchild', 'path': 'child', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'name': 'grandchild', 'path': 'child', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:04:15 | DEBUG | resource: converted (Child) to declarative resource
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Parent)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: starting attribute processing for (Parent)
2025-03-24 19:04:15 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Parent
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: found class (Child) on (Parent)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: class (Child) has metadata: {'name': 'grandchild', 'path': '/parent', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: registered component (grandchild) on: Parent
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: completed processing for (Parent) - metadata: {'name': 'grandchild', 'path': '/parent', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'name': 'grandchild', 'path': '/parent', 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: set resource name (test) for: Test
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'test', 'components': {}, 'methods': {}}
2025-03-24 19:04:15 | DEBUG | DeclarativeResource: extracted path () from: Test
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'name': 'test', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 19:04:15 | DEBUG | resource: converted (Test) to declarative resource
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: found callable (test_method) on: TestResource
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: registered method (test_method) on: TestResource
2025-03-24 19:04:15 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x106d342c0>}}
2025-03-24 19:04:15 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 19:04:15 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x106d342c0>}, 'path': ''}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (TestComponent)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (TestComponent)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (TestComponent)
2025-03-24 19:06:40 | DEBUG | DeclarativeComponent: Processing Attribute (attribute) on: TestComponent
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (TestComponent) - metadata: {'attribute': 'value'}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Parent)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 19:06:40 | DEBUG | DeclarativeComponent: Processing Attribute (parent_attr) on: Parent
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'parent_attr': 'parent'}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (Parent) to (Child)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 19:06:40 | DEBUG | DeclarativeComponent: Processing Attribute (child_attr) on: Child
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (NestedComponent)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (NestedComponent)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (NestedComponent)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (NestedComponent) - metadata: {}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: found callable (method) on: Container
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: registered method (method) on: Container
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: found class (NestedComponent) on (Container)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: class (NestedComponent) has metadata: {'components': {}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1029318a0>}}
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: registered component (nestedcomponent) on: Container
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1029318a0>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1029318a0>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeComponent: Processing Attribute (attr) on: Test
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'attr': 'value'}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (Declarative)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Declarative)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (Declarative)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (Declarative) - metadata: {}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (Source)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Source)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (Source)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (Source) - metadata: {}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (Target)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Target)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (Target)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (Target) - metadata: {'a': 1, 'b': 2}
2025-03-24 19:06:40 | DEBUG | copymetadata: Copied metadata from (Source) to (Target)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (Component)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Component)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (Component)
2025-03-24 19:06:40 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: Component
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (Component) - metadata: {'name': 'mycomponent'}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Container)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: found class (Component) on (Container)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: class (Component) has metadata: {'name': 'mycomponent', 'components': {}, 'methods': {}}
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Container
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {}}
2025-03-24 19:06:40 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 19:06:40 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: registered nested resource (testresource) on: TestClient
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 19:06:40 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: TestClient
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'path': '', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'baseurl': 'https://api.test.com'}
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: registered component (testresource) on: TestClient
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'testresource', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'path': '', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'baseurl': 'https://api.test.com'}
2025-03-24 19:06:40 | DEBUG | DeclarativeClient: found resource (testresource) on: TestClient
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'path': '', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'baseurl': 'https://api.test.com', 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:06:40 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: registered nested resource (testresource) on: Test
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: found class (TestResource) on (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>}
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: registered component (testresource) on: Test
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'testresource', 'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>}
2025-03-24 19:06:40 | DEBUG | DeclarativeClient: extracted baseurl () from: Test
2025-03-24 19:06:40 | DEBUG | DeclarativeClient: found resource (testresource) on: Test
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'baseurl': '', 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 19:06:40 | DEBUG | client: converted (Test) to declarative client
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: registered nested resource (myresource) on: TestClient
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (resource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'myresource', 'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>}
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: registered component (myresource) on: TestClient
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'myresource', 'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>}
2025-03-24 19:06:40 | DEBUG | DeclarativeClient: extracted baseurl () from: TestClient
2025-03-24 19:06:40 | DEBUG | DeclarativeClient: found resource (myresource) on: TestClient
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (resource) - metadata: {'name': 'myresource', 'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'baseurl': '', 'resources': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}}
2025-03-24 19:06:40 | DEBUG | client: converted (TestClient) to declarative client
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (BaseResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: set resource name (baseresource) for: BaseResource
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (BaseResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: BaseResource
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (components) container for (BaseResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (methods) container for (BaseResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: completed processing for (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 19:06:40 | DEBUG | resource: converted (BaseResource) to declarative resource
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (BaseClient)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeClient) to (BaseClient)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: registered nested resource (baseresource) on: BaseClient
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseClient)
2025-03-24 19:06:40 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: BaseClient
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: found class (BaseResource) on (BaseClient)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: class (BaseResource) has metadata: {'name': 'baseresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'baseurl': 'https://api.base.com'}
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: registered component (baseresource) on: BaseClient
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: completed processing for (BaseClient) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'baseurl': 'https://api.base.com'}
2025-03-24 19:06:40 | DEBUG | DeclarativeClient: found resource (baseresource) on: BaseClient
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'baseurl': 'https://api.base.com', 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (ChildResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: set resource name (childresource) for: ChildResource
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (ChildResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: ChildResource
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: completed processing for (ChildResource) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'baseurl': 'https://api.base.com', 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'baseurl': 'https://api.base.com', 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:06:40 | DEBUG | resource: converted (ChildResource) to declarative resource
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (ChildClient)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (BaseClient) to (ChildClient)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: registered nested resource (childresource) on: ChildClient
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildClient)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: found class (ChildResource) on (ChildClient)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: class (ChildResource) has metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'baseurl': 'https://api.base.com', 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: registered component (childresource) on: ChildClient
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: completed processing for (ChildClient) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'baseurl': 'https://api.base.com', 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:06:40 | DEBUG | DeclarativeClient: found resource (childresource) on: ChildClient
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'baseurl': 'https://api.base.com', 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test'}
2025-03-24 19:06:40 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {}
2025-03-24 19:06:40 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (Nested)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeComponent) to (Nested)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (Nested)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (Nested) - metadata: {}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: found callable (method) on: Test
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: registered method (method) on: Test
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: found class (Nested) on (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: class (Nested) has metadata: {'value': 'test', 'components': {}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102930c20>}}
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: registered component (nested) on: Test
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'value': 'test', 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102930c20>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test', 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102930c20>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 19:06:40 | DEBUG | container: converted (Test) to declarative container
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeContainer) to (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 19:06:40 | DEBUG | container: converted (Test) to declarative container
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:06:40 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: TestResource
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (GrandChild)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: set resource name (grandchild) for: GrandChild
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (GrandChild)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: starting attribute processing for (GrandChild)
2025-03-24 19:06:40 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: GrandChild
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (components) container for (GrandChild)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (methods) container for (GrandChild)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: completed processing for (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 19:06:40 | DEBUG | resource: converted (GrandChild) to declarative resource
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: set resource name (child) for: Child
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Child)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: registered nested resource (child) on: Child
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: starting attribute processing for (Child)
2025-03-24 19:06:40 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Child
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: found class (GrandChild) on (Child)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: class (GrandChild) has metadata: {'name': 'child', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: registered component (child) on: Child
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: completed processing for (Child) - metadata: {'name': 'child', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'name': 'child', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:06:40 | DEBUG | resource: converted (Child) to declarative resource
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: set resource name (parent) for: Parent
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Parent)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: registered nested resource (parent) on: Parent
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: starting attribute processing for (Parent)
2025-03-24 19:06:40 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Parent
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: found class (Child) on (Parent)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: class (Child) has metadata: {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: registered component (parent) on: Parent
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: completed processing for (Parent) - metadata: {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: set resource name (test) for: Test
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'test', 'components': {}, 'methods': {}}
2025-03-24 19:06:40 | DEBUG | DeclarativeResource: extracted path () from: Test
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'name': 'test', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 19:06:40 | DEBUG | resource: converted (Test) to declarative resource
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: copyinh metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: found callable (test_method) on: TestResource
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: registered method (test_method) on: TestResource
2025-03-24 19:06:40 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x1029744a0>}}
2025-03-24 19:06:40 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 19:06:40 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x1029744a0>}, 'path': ''}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (TestComponent)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (TestComponent)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (TestComponent)
2025-03-24 19:20:22 | DEBUG | DeclarativeComponent: Processing Attribute (attribute) on: TestComponent
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (TestComponent) - metadata: {'attribute': 'value'}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Parent)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 19:20:22 | DEBUG | DeclarativeComponent: Processing Attribute (parent_attr) on: Parent
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'parent_attr': 'parent'}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (Parent) to (Child)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 19:20:22 | DEBUG | DeclarativeComponent: Processing Attribute (child_attr) on: Child
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (NestedComponent)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (NestedComponent)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (NestedComponent)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (NestedComponent) - metadata: {}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Container)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: found callable (method) on: Container
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: registered method (method) on: Container
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: found class (NestedComponent) on (Container)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: class (NestedComponent) has metadata: {'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a99940>}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: registered component (nestedcomponent) on: Container
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a99940>}, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a99940>}, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeComponent: Processing Attribute (attr) on: Test
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'attr': 'value'}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (Declarative)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Declarative)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (Declarative)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (Declarative) - metadata: {}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (Source)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Source)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (Source)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (Source) - metadata: {}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (Target)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Target)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (Target)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (Target) - metadata: {'a': 1, 'b': 2}
2025-03-24 19:20:22 | DEBUG | copymetadata: Copied metadata from (Source) to (Target)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (Component)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Component)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (Component)
2025-03-24 19:20:22 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: Component
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (Component) - metadata: {'name': 'mycomponent'}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Container)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: found class (Component) on (Container)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: class (Component) has metadata: {'name': 'mycomponent', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Container
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'name': 'mycomponent', 'methods': {}, 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'name': 'mycomponent', 'methods': {}, 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource'}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'methods': {}, 'components': {}, 'path': ''}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'methods': {}, 'components': {}, 'path': ''}
2025-03-24 19:20:22 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: registered nested resource (testresource) on: TestClient
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 19:20:22 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: TestClient
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'methods': {}, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'path': '', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'baseurl': 'https://api.test.com'}
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: registered component (testresource) on: TestClient
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'testresource', 'methods': {}, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'path': '', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'baseurl': 'https://api.test.com'}
2025-03-24 19:20:22 | DEBUG | DeclarativeClient: found resource (testresource) on: TestClient
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'methods': {}, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'path': '', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'baseurl': 'https://api.test.com', 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource'}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: registered nested resource (testresource) on: Test
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: found class (TestResource) on (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>}
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: registered component (testresource) on: Test
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>}
2025-03-24 19:20:22 | DEBUG | DeclarativeClient: extracted baseurl () from: Test
2025-03-24 19:20:22 | DEBUG | DeclarativeClient: found resource (testresource) on: Test
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'baseurl': '', 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 19:20:22 | DEBUG | client: converted (Test) to declarative client
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource'}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: registered nested resource (myresource) on: TestClient
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (resource)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'myresource', 'path': '/test', 'methods': {}, 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>}
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: registered component (myresource) on: TestClient
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'myresource', 'path': '/test', 'methods': {}, 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>}
2025-03-24 19:20:22 | DEBUG | DeclarativeClient: extracted baseurl () from: TestClient
2025-03-24 19:20:22 | DEBUG | DeclarativeClient: found resource (myresource) on: TestClient
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (resource) - metadata: {'name': 'myresource', 'path': '/test', 'methods': {}, 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'baseurl': '', 'resources': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}}
2025-03-24 19:20:22 | DEBUG | client: converted (TestClient) to declarative client
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (BaseResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: set resource name (baseresource) for: BaseResource
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (BaseResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: starting attribute processing for (BaseResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'baseresource'}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: name already set to (baseresource) for: BaseResource
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: BaseResource
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: BaseResource
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (methods) container for (BaseResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (components) container for (BaseResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: completed processing for (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: BaseResource
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'baseresource', 'path': '/base', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: completed processing for (BaseResource) - final metadata: {'name': 'baseresource', 'path': '/base', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | resource: converted (BaseResource) to declarative resource
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (BaseClient)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (BaseClient)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: registered nested resource (baseresource) on: BaseClient
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseClient)
2025-03-24 19:20:22 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: BaseClient
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: found class (BaseResource) on (BaseClient)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: class (BaseResource) has metadata: {'name': 'baseresource', 'path': '/base', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'baseurl': 'https://api.base.com'}
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: registered component (baseresource) on: BaseClient
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: completed processing for (BaseClient) - metadata: {'name': 'baseresource', 'path': '/base', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'baseurl': 'https://api.base.com'}
2025-03-24 19:20:22 | DEBUG | DeclarativeClient: found resource (baseresource) on: BaseClient
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'baseurl': 'https://api.base.com', 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (ChildResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: set resource name (childresource) for: ChildResource
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (ChildResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: starting attribute processing for (ChildResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'childresource', 'path': '/base', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'baseurl': 'https://api.base.com', 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: name already set to (childresource) for: ChildResource
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: ChildResource
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: ChildResource
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: completed processing for (ChildResource) - metadata: {'name': 'childresource', 'path': '/child', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'baseurl': 'https://api.base.com', 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: ChildResource
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'childresource', 'path': '/child', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'baseurl': 'https://api.base.com', 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: completed processing for (ChildResource) - final metadata: {'name': 'childresource', 'path': '/child', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'baseurl': 'https://api.base.com', 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'name': 'childresource', 'path': '/child', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'baseurl': 'https://api.base.com', 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:20:22 | DEBUG | resource: converted (ChildResource) to declarative resource
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (ChildClient)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (BaseClient) to (ChildClient)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: registered nested resource (childresource) on: ChildClient
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildClient)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: found class (ChildResource) on (ChildClient)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: class (ChildResource) has metadata: {'name': 'childresource', 'path': '/child', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'baseurl': 'https://api.base.com', 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: registered component (childresource) on: ChildClient
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: completed processing for (ChildClient) - metadata: {'name': 'childresource', 'path': '/child', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'baseurl': 'https://api.base.com', 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:20:22 | DEBUG | DeclarativeClient: found resource (childresource) on: ChildClient
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'name': 'childresource', 'path': '/child', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'baseurl': 'https://api.base.com', 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test'}
2025-03-24 19:20:22 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {}
2025-03-24 19:20:22 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (Nested)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Nested)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (Nested)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (Nested) - metadata: {}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: found callable (method) on: Test
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: registered method (method) on: Test
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: found class (Nested) on (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: class (Nested) has metadata: {'value': 'test', 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a98cc0>}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: registered component (nested) on: Test
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'value': 'test', 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a98cc0>}, 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test', 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a98cc0>}, 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 19:20:22 | DEBUG | container: converted (Test) to declarative container
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | container: converted (Test) to declarative container
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource'}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'test_resource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'test_resource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (GrandChild)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: set resource name (grandchild) for: GrandChild
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (GrandChild)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: starting attribute processing for (GrandChild)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'grandchild'}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: name already set to (grandchild) for: GrandChild
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: GrandChild
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: starting attribute processing for (GrandChild)
2025-03-24 19:20:22 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: GrandChild
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (methods) container for (GrandChild)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (components) container for (GrandChild)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: completed processing for (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: GrandChild
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'grandchild', 'path': 'grandchild', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: completed processing for (GrandChild) - final metadata: {'name': 'grandchild', 'path': 'grandchild', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | resource: converted (GrandChild) to declarative resource
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: set resource name (child) for: Child
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Child)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: registered nested resource (child) on: Child
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: starting attribute processing for (Child)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'child', 'path': 'grandchild', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: name already set to (child) for: Child
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Child
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: starting attribute processing for (Child)
2025-03-24 19:20:22 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Child
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: found class (GrandChild) on (Child)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: class (GrandChild) has metadata: {'name': 'child', 'path': 'child', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: registered component (child) on: Child
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: completed processing for (Child) - metadata: {'name': 'child', 'path': 'child', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Child
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'child', 'path': 'child', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: completed processing for (Child) - final metadata: {'name': 'child', 'path': 'child', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'name': 'child', 'path': 'child', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:20:22 | DEBUG | resource: converted (Child) to declarative resource
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: set resource name (parent) for: Parent
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Parent)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: registered nested resource (parent) on: Parent
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: starting attribute processing for (Parent)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'parent', 'path': 'child', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: name already set to (parent) for: Parent
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Parent
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: starting attribute processing for (Parent)
2025-03-24 19:20:22 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Parent
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: found class (Child) on (Parent)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: class (Child) has metadata: {'name': 'parent', 'path': '/parent', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: registered component (parent) on: Parent
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: completed processing for (Parent) - metadata: {'name': 'parent', 'path': '/parent', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Parent
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'parent', 'path': '/parent', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: completed processing for (Parent) - final metadata: {'name': 'parent', 'path': '/parent', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'name': 'parent', 'path': '/parent', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: set resource name (test) for: Test
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: starting attribute processing for (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'test'}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: name already set to (test) for: Test
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Test
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'test', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Test
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'test', 'methods': {}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: extracted path () from: Test
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: completed processing for (Test) - final metadata: {'name': 'test', 'methods': {}, 'components': {}, 'path': ''}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'name': 'test', 'methods': {}, 'components': {}, 'path': ''}
2025-03-24 19:20:22 | DEBUG | resource: converted (Test) to declarative resource
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource'}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: found callable (test_method) on: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: registered method (test_method) on: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x102ad4540>}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x102ad4540>}, 'components': {}}
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 19:20:22 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x102ad4540>}, 'components': {}, 'path': ''}
2025-03-24 19:20:22 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x102ad4540>}, 'components': {}, 'path': ''}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (TestComponent)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (TestComponent)
2025-03-24 19:24:17 | DEBUG | DeclarativeComponent: Processing Attribute (attribute) on: TestComponent
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (TestComponent)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (TestComponent) - metadata: {'attribute': 'value'}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 19:24:17 | DEBUG | DeclarativeComponent: Processing Attribute (parent_attr) on: Parent
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Parent)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'parent_attr': 'parent'}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 19:24:17 | DEBUG | DeclarativeComponent: Processing Attribute (child_attr) on: Child
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (Parent) to (Child)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (NestedComponent)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (NestedComponent)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (NestedComponent)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (NestedComponent) - metadata: {}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: found callable (method) on: Container
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: registered method (method) on: Container
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: found class (NestedComponent) on (Container)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: class (NestedComponent) has metadata: {'components': {}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a0d940>}}
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: registered component (nestedcomponent) on: Container
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a0d940>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Container)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x102a0d940>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeComponent: Processing Attribute (attr) on: Test
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'attr': 'value'}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (Declarative)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (Declarative)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Declarative)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (Declarative) - metadata: {}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (Source)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (Source)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Source)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (Source) - metadata: {}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (Target)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (Target)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Target)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (Target) - metadata: {'a': 1, 'b': 2}
2025-03-24 19:24:17 | DEBUG | copymetadata: Copied metadata from (Source) to (Target)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (Component)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (Component)
2025-03-24 19:24:17 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: Component
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Component)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (Component) - metadata: {'name': 'mycomponent'}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: found class (Component) on (Container)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: class (Component) has metadata: {'name': 'mycomponent', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Container
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Container)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource'}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 19:24:17 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 19:24:17 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: TestClient
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'components': {}, 'methods': {}, 'path': '', 'baseurl': 'https://api.test.com'}
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: registered component (testresource) on: TestClient
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'testresource', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>}
2025-03-24 19:24:17 | DEBUG | DeclarativeClient: found resource (testresource) on: TestClient
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'name': 'testresource', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource'}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: found class (TestResource) on (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: registered component (testresource) on: Test
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'testresource', 'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>}
2025-03-24 19:24:17 | DEBUG | DeclarativeClient: extracted baseurl () from: Test
2025-03-24 19:24:17 | DEBUG | DeclarativeClient: found resource (testresource) on: Test
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'name': 'testresource', 'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'baseurl': '', 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 19:24:17 | DEBUG | client: converted (Test) to declarative client
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource'}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'myresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: registered component (myresource) on: TestClient
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'myresource', 'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>}
2025-03-24 19:24:17 | DEBUG | DeclarativeClient: extracted baseurl () from: TestClient
2025-03-24 19:24:17 | DEBUG | DeclarativeClient: found resource (myresource) on: TestClient
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'name': 'myresource', 'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'baseurl': '', 'resources': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}}
2025-03-24 19:24:17 | DEBUG | client: converted (TestClient) to declarative client
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (BaseResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: set resource name (baseresource) for: BaseResource
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: starting attribute processing for (BaseResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'baseresource'}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: name already set to (baseresource) for: BaseResource
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: BaseResource
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: BaseResource
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (components) container for (BaseResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (methods) container for (BaseResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: completed processing for (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: BaseResource
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: completed processing for (BaseResource) - final metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (BaseResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | resource: converted (BaseResource) to declarative resource
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (BaseClient)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (BaseClient)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseClient)
2025-03-24 19:24:17 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: BaseClient
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: found class (BaseResource) on (BaseClient)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: class (BaseResource) has metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}, 'baseurl': 'https://api.base.com'}
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: registered component (baseresource) on: BaseClient
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: completed processing for (BaseClient) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>}
2025-03-24 19:24:17 | DEBUG | DeclarativeClient: found resource (baseresource) on: BaseClient
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (BaseClient)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (BaseClient) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (ChildResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: set resource name (childresource) for: ChildResource
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: starting attribute processing for (ChildResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'childresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: name already set to (childresource) for: ChildResource
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: ChildResource
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: ChildResource
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: completed processing for (ChildResource) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: ChildResource
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: completed processing for (ChildResource) - final metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (ChildResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:24:17 | DEBUG | resource: converted (ChildResource) to declarative resource
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (ChildClient)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (ChildClient)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildClient)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: found class (ChildResource) on (ChildClient)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: class (ChildResource) has metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: registered component (childresource) on: ChildClient
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: completed processing for (ChildClient) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:24:17 | DEBUG | DeclarativeClient: found resource (childresource) on: ChildClient
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (BaseClient) to (ChildClient)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (ChildClient) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test'}
2025-03-24 19:24:17 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {}
2025-03-24 19:24:17 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (Nested)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (Nested)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Nested)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (Nested) - metadata: {}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: found callable (method) on: Test
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: registered method (method) on: Test
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: found class (Nested) on (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: class (Nested) has metadata: {'value': 'test', 'components': {}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a0ccc0>}}
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: registered component (nested) on: Test
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'value': 'test', 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a0ccc0>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test', 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x102a0ccc0>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 19:24:17 | DEBUG | container: converted (Test) to declarative container
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | container: converted (Test) to declarative container
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource'}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'test_resource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'test_resource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (GrandChild)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: set resource name (grandchild) for: GrandChild
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: starting attribute processing for (GrandChild)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'grandchild'}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: name already set to (grandchild) for: GrandChild
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: GrandChild
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: starting attribute processing for (GrandChild)
2025-03-24 19:24:17 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: GrandChild
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (components) container for (GrandChild)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (methods) container for (GrandChild)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: completed processing for (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: GrandChild
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'grandchild', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: completed processing for (GrandChild) - final metadata: {'name': 'grandchild', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (GrandChild)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | resource: converted (GrandChild) to declarative resource
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: set resource name (child) for: Child
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: starting attribute processing for (Child)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'child', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: name already set to (child) for: Child
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Child
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: starting attribute processing for (Child)
2025-03-24 19:24:17 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Child
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: found class (GrandChild) on (Child)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: class (GrandChild) has metadata: {'name': 'child', 'path': 'child', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: registered component (child) on: Child
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: completed processing for (Child) - metadata: {'name': 'child', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Child
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'child', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: completed processing for (Child) - final metadata: {'name': 'child', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Child)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'name': 'child', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:24:17 | DEBUG | resource: converted (Child) to declarative resource
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: set resource name (parent) for: Parent
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: starting attribute processing for (Parent)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'parent', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: name already set to (parent) for: Parent
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Parent
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: starting attribute processing for (Parent)
2025-03-24 19:24:17 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Parent
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: found class (Child) on (Parent)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: class (Child) has metadata: {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: registered component (parent) on: Parent
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: completed processing for (Parent) - metadata: {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Parent
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: completed processing for (Parent) - final metadata: {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Parent)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: set resource name (test) for: Test
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: starting attribute processing for (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'test'}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: name already set to (test) for: Test
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Test
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'test', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Test
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'test', 'components': {}, 'methods': {}}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: extracted path () from: Test
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: completed processing for (Test) - final metadata: {'name': 'test', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Test)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'name': 'test', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 19:24:17 | DEBUG | resource: converted (Test) to declarative resource
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource'}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: found callable (test_method) on: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: registered method (test_method) on: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x102a48540>}}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x102a48540>}}
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 19:24:17 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x102a48540>}, 'path': ''}
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:24:17 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x102a48540>}, 'path': ''}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (TestComponent)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (TestComponent)
2025-03-24 19:25:45 | DEBUG | DeclarativeComponent: Processing Attribute (attribute) on: TestComponent
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (TestComponent)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (TestComponent) - metadata: {'attribute': 'value'}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 19:25:45 | DEBUG | DeclarativeComponent: Processing Attribute (parent_attr) on: Parent
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Parent)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'parent_attr': 'parent'}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'parent_attr': 'parent'}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 19:25:45 | DEBUG | DeclarativeComponent: Processing Attribute (child_attr) on: Child
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (Parent) to (Child)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (NestedComponent)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (NestedComponent)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (NestedComponent)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (NestedComponent) - metadata: {}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: found callable (method) on: Container
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: registered method (method) on: Container
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: found class (NestedComponent) on (Container)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: class (NestedComponent) has metadata: {'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104775940>}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: registered component (nestedcomponent) on: Container
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104775940>}, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Container)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x104775940>}, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeComponent: Processing Attribute (attr) on: Test
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'attr': 'value'}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (Declarative)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (Declarative)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Declarative)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (Declarative) - metadata: {}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (Source)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (Source)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Source)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (Source) - metadata: {}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (Target)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'a': 1, 'b': 2}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (Target)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Target)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (Target) - metadata: {'a': 1, 'b': 2}
2025-03-24 19:25:45 | DEBUG | copymetadata: Copied metadata from (Source) to (Target)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (Component)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (Component)
2025-03-24 19:25:45 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: Component
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Component)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (Component) - metadata: {'name': 'mycomponent'}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'mycomponent'}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: found class (Component) on (Container)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: class (Component) has metadata: {'name': 'mycomponent', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Container
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'name': 'mycomponent', 'methods': {}, 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Container)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'name': 'mycomponent', 'methods': {}, 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'testresource'}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource'}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'methods': {}, 'components': {}, 'path': ''}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'methods': {}, 'components': {}, 'path': ''}
2025-03-24 19:25:45 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'testresource', 'methods': {}, 'components': {}, 'path': ''}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 19:25:45 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: TestClient
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'methods': {}, 'components': {}, 'path': '', 'baseurl': 'https://api.test.com'}
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: registered component (testresource) on: TestClient
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'testresource', 'methods': {}, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>}
2025-03-24 19:25:45 | DEBUG | DeclarativeClient: found resource (testresource) on: TestClient
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'name': 'testresource', 'methods': {}, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'testresource'}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource'}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: found class (TestResource) on (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: registered component (testresource) on: Test
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>}
2025-03-24 19:25:45 | DEBUG | DeclarativeClient: extracted baseurl () from: Test
2025-03-24 19:25:45 | DEBUG | DeclarativeClient: found resource (testresource) on: Test
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'baseurl': '', 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 19:25:45 | DEBUG | client: converted (Test) to declarative client
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'testresource'}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource'}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'myresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'myresource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: registered component (myresource) on: TestClient
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'myresource', 'path': '/test', 'methods': {}, 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>}
2025-03-24 19:25:45 | DEBUG | DeclarativeClient: extracted baseurl () from: TestClient
2025-03-24 19:25:45 | DEBUG | DeclarativeClient: found resource (myresource) on: TestClient
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'name': 'myresource', 'path': '/test', 'methods': {}, 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'baseurl': '', 'resources': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}}
2025-03-24 19:25:45 | DEBUG | client: converted (TestClient) to declarative client
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (BaseResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: set resource name (baseresource) for: BaseResource
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'baseresource'}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: starting attribute processing for (BaseResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'baseresource'}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: name already set to (baseresource) for: BaseResource
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: BaseResource
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: BaseResource
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (methods) container for (BaseResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (components) container for (BaseResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: completed processing for (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: BaseResource
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'baseresource', 'path': '/base', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: completed processing for (BaseResource) - final metadata: {'name': 'baseresource', 'path': '/base', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (BaseResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | resource: converted (BaseResource) to declarative resource
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (BaseClient)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'baseresource', 'path': '/base', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (BaseClient)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseClient)
2025-03-24 19:25:45 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: BaseClient
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: found class (BaseResource) on (BaseClient)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: class (BaseResource) has metadata: {'name': 'baseresource', 'path': '/base', 'methods': {}, 'components': {}, 'baseurl': 'https://api.base.com'}
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: registered component (baseresource) on: BaseClient
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: completed processing for (BaseClient) - metadata: {'name': 'baseresource', 'path': '/base', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>}
2025-03-24 19:25:45 | DEBUG | DeclarativeClient: found resource (baseresource) on: BaseClient
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (BaseClient)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (BaseClient) - metadata: {'name': 'baseresource', 'path': '/base', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (ChildResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: set resource name (childresource) for: ChildResource
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'childresource', 'path': '/base', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: starting attribute processing for (ChildResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'childresource', 'path': '/base', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: name already set to (childresource) for: ChildResource
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: ChildResource
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: ChildResource
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: completed processing for (ChildResource) - metadata: {'name': 'childresource', 'path': '/child', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: ChildResource
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'childresource', 'path': '/child', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: completed processing for (ChildResource) - final metadata: {'name': 'childresource', 'path': '/child', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (ChildResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'name': 'childresource', 'path': '/child', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:25:45 | DEBUG | resource: converted (ChildResource) to declarative resource
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (ChildClient)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'childresource', 'path': '/child', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (ChildClient)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildClient)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: found class (ChildResource) on (ChildClient)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: class (ChildResource) has metadata: {'name': 'childresource', 'path': '/child', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: registered component (childresource) on: ChildClient
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: completed processing for (ChildClient) - metadata: {'name': 'childresource', 'path': '/child', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:25:45 | DEBUG | DeclarativeClient: found resource (childresource) on: ChildClient
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (BaseClient) to (ChildClient)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (ChildClient) - metadata: {'name': 'childresource', 'path': '/child', 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test'}
2025-03-24 19:25:45 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {}
2025-03-24 19:25:45 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (Nested)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (Nested)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Nested)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (Nested) - metadata: {}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: found callable (method) on: Test
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: registered method (method) on: Test
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: found class (Nested) on (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: class (Nested) has metadata: {'value': 'test', 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x104774cc0>}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: registered component (nested) on: Test
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'value': 'test', 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x104774cc0>}, 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test', 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x104774cc0>}, 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 19:25:45 | DEBUG | container: converted (Test) to declarative container
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | container: converted (Test) to declarative container
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'testresource'}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource'}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'test_resource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'test_resource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (GrandChild)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: set resource name (grandchild) for: GrandChild
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'grandchild'}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: starting attribute processing for (GrandChild)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'grandchild'}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: name already set to (grandchild) for: GrandChild
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: GrandChild
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: starting attribute processing for (GrandChild)
2025-03-24 19:25:45 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: GrandChild
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (methods) container for (GrandChild)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (components) container for (GrandChild)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: completed processing for (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: GrandChild
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'grandchild', 'path': 'grandchild', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: completed processing for (GrandChild) - final metadata: {'name': 'grandchild', 'path': 'grandchild', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (GrandChild)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | resource: converted (GrandChild) to declarative resource
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: set resource name (child) for: Child
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'child', 'path': 'grandchild', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: starting attribute processing for (Child)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'child', 'path': 'grandchild', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: name already set to (child) for: Child
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Child
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: starting attribute processing for (Child)
2025-03-24 19:25:45 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Child
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: found class (GrandChild) on (Child)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: class (GrandChild) has metadata: {'name': 'child', 'path': 'child', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: registered component (child) on: Child
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: completed processing for (Child) - metadata: {'name': 'child', 'path': 'child', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Child
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'child', 'path': 'child', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: completed processing for (Child) - final metadata: {'name': 'child', 'path': 'child', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Child)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'name': 'child', 'path': 'child', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:25:45 | DEBUG | resource: converted (Child) to declarative resource
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: set resource name (parent) for: Parent
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'parent', 'path': 'child', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: starting attribute processing for (Parent)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'parent', 'path': 'child', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: name already set to (parent) for: Parent
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Parent
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: starting attribute processing for (Parent)
2025-03-24 19:25:45 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Parent
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: found class (Child) on (Parent)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: class (Child) has metadata: {'name': 'parent', 'path': '/parent', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: registered component (parent) on: Parent
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: completed processing for (Parent) - metadata: {'name': 'parent', 'path': '/parent', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Parent
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'parent', 'path': '/parent', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: completed processing for (Parent) - final metadata: {'name': 'parent', 'path': '/parent', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Parent)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'name': 'parent', 'path': '/parent', 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: set resource name (test) for: Test
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'test'}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: starting attribute processing for (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'test'}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: name already set to (test) for: Test
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Test
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'test', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Test
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'test', 'methods': {}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: extracted path () from: Test
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: completed processing for (Test) - final metadata: {'name': 'test', 'methods': {}, 'components': {}, 'path': ''}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Test)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'name': 'test', 'methods': {}, 'components': {}, 'path': ''}
2025-03-24 19:25:45 | DEBUG | resource: converted (Test) to declarative resource
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'testresource'}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource'}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: found callable (test_method) on: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: registered method (test_method) on: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x1047b0540>}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x1047b0540>}, 'components': {}}
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 19:25:45 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x1047b0540>}, 'components': {}, 'path': ''}
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:25:45 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x1047b0540>}, 'components': {}, 'path': ''}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (TestComponent)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (TestComponent)
2025-03-24 19:29:52 | DEBUG | DeclarativeComponent: Processing Attribute (attribute) on: TestComponent
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (TestComponent)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (TestComponent) - metadata: {'attribute': 'value'}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 19:29:52 | DEBUG | DeclarativeComponent: Processing Attribute (parent_attr) on: Parent
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Parent)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'parent_attr': 'parent'}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {'parent_attr': 'parent'}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'parent_attr': 'parent'}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 19:29:52 | DEBUG | DeclarativeComponent: Processing Attribute (child_attr) on: Child
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (Parent) to (Child)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (NestedComponent)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (NestedComponent)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (NestedComponent)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (NestedComponent) - metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: found callable (method) on: Container
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: registered method (method) on: Container
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: found class (NestedComponent) on (Container)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: class (NestedComponent) has metadata: {'components': {}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1045c5940>}}
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: registered component (nestedcomponent) on: Container
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1045c5940>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Container)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1045c5940>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container'>}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeComponent: Processing Attribute (attr) on: Test
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'attr': 'value'}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (Declarative)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (Declarative)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Declarative)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (Declarative) - metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (Source)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (Source)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Source)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (Source) - metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (Target)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {'a': 1, 'b': 2}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'a': 1, 'b': 2}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (Target)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Target)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (Target) - metadata: {'a': 1, 'b': 2}
2025-03-24 19:29:52 | DEBUG | copymetadata: Copied metadata from (Source) to (Target)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (Component)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (Component)
2025-03-24 19:29:52 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: Component
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Component)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (Component) - metadata: {'name': 'mycomponent'}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {'name': 'mycomponent'}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'mycomponent'}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (components) container for (Container)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (methods) container for (Container)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: found class (Component) on (Container)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: class (Component) has metadata: {'name': 'mycomponent', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Container
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Container)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'name': 'mycomponent', 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container'>}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'testresource'}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource'}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 19:29:52 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {'name': 'testresource', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'testresource', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 19:29:52 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: TestClient
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'components': {}, 'methods': {}, 'path': '', 'baseurl': 'https://api.test.com'}
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: registered component (testresource) on: TestClient
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'testresource', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>}
2025-03-24 19:29:52 | DEBUG | DeclarativeClient: found resource (testresource) on: TestClient
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'name': 'testresource', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'path': '', 'baseurl': 'https://api.test.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_declarative_client_basic.<locals>.TestClient'>, 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'testresource'}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource'}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: found class (TestResource) on (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: registered component (testresource) on: Test
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'testresource', 'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>}
2025-03-24 19:29:52 | DEBUG | DeclarativeClient: extracted baseurl () from: Test
2025-03-24 19:29:52 | DEBUG | DeclarativeClient: found resource (testresource) on: Test
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'name': 'testresource', 'path': '/test', 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.Test'>, 'baseurl': '', 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 19:29:52 | DEBUG | client: converted (Test) to declarative client
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'testresource'}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource'}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {'name': 'myresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'myresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'myresource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: registered component (myresource) on: TestClient
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'name': 'myresource', 'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>}
2025-03-24 19:29:52 | DEBUG | DeclarativeClient: extracted baseurl () from: TestClient
2025-03-24 19:29:52 | DEBUG | DeclarativeClient: found resource (myresource) on: TestClient
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'name': 'myresource', 'path': '/test', 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.TestClient'>, 'baseurl': '', 'resources': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}}
2025-03-24 19:29:52 | DEBUG | client: converted (TestClient) to declarative client
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (BaseResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: set resource name (baseresource) for: BaseResource
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'baseresource'}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: starting attribute processing for (BaseResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'baseresource'}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: name already set to (baseresource) for: BaseResource
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: BaseResource
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: BaseResource
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (components) container for (BaseResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (methods) container for (BaseResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: completed processing for (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: BaseResource
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: completed processing for (BaseResource) - final metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (BaseResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | resource: converted (BaseResource) to declarative resource
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (BaseClient)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (BaseClient)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseClient)
2025-03-24 19:29:52 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: BaseClient
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: found class (BaseResource) on (BaseClient)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: class (BaseResource) has metadata: {'name': 'baseresource', 'path': '/base', 'components': {}, 'methods': {}, 'baseurl': 'https://api.base.com'}
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: registered component (baseresource) on: BaseClient
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: completed processing for (BaseClient) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>}
2025-03-24 19:29:52 | DEBUG | DeclarativeClient: found resource (baseresource) on: BaseClient
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (BaseClient)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (BaseClient) - metadata: {'name': 'baseresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (ChildResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {'name': 'baseresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: set resource name (childresource) for: ChildResource
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'childresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: starting attribute processing for (ChildResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'childresource', 'path': '/base', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: name already set to (childresource) for: ChildResource
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: ChildResource
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: ChildResource
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: completed processing for (ChildResource) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: ChildResource
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: completed processing for (ChildResource) - final metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (ChildResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:29:52 | DEBUG | resource: converted (ChildResource) to declarative resource
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (ChildClient)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (ChildClient)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildClient)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: found class (ChildResource) on (ChildClient)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: class (ChildResource) has metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.BaseClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: registered component (childresource) on: ChildClient
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: completed processing for (ChildClient) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:29:52 | DEBUG | DeclarativeClient: found resource (childresource) on: ChildClient
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (BaseClient) to (ChildClient)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (ChildClient) - metadata: {'name': 'childresource', 'path': '/child', 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'parent': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_inheritance.<locals>.ChildClient'>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test'}
2025-03-24 19:29:52 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {}
2025-03-24 19:29:52 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (Nested)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (Nested)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Nested)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (Nested) - metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: found callable (method) on: Test
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: registered method (method) on: Test
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: found class (Nested) on (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: class (Nested) has metadata: {'value': 'test', 'components': {}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1045c4cc0>}}
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: registered component (nested) on: Test
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'value': 'test', 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1045c4cc0>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test', 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1045c4cc0>}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_decorators.Test'>}
2025-03-24 19:29:52 | DEBUG | container: converted (Test) to declarative container
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | container: converted (Test) to declarative container
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'testresource'}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource'}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'test_resource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'test_resource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'test_resource', 'path': '/test', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (GrandChild)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: set resource name (grandchild) for: GrandChild
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'grandchild'}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: starting attribute processing for (GrandChild)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'grandchild'}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: name already set to (grandchild) for: GrandChild
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: GrandChild
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: starting attribute processing for (GrandChild)
2025-03-24 19:29:52 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: GrandChild
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (components) container for (GrandChild)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (methods) container for (GrandChild)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: completed processing for (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: GrandChild
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'grandchild', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: completed processing for (GrandChild) - final metadata: {'name': 'grandchild', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (GrandChild)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'name': 'grandchild', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | resource: converted (GrandChild) to declarative resource
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {'name': 'grandchild', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: set resource name (child) for: Child
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'child', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: starting attribute processing for (Child)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'child', 'path': 'grandchild', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: name already set to (child) for: Child
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Child
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: starting attribute processing for (Child)
2025-03-24 19:29:52 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Child
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: found class (GrandChild) on (Child)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: class (GrandChild) has metadata: {'name': 'child', 'path': 'child', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: registered component (child) on: Child
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: completed processing for (Child) - metadata: {'name': 'child', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Child
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'child', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: completed processing for (Child) - final metadata: {'name': 'child', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Child)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'name': 'child', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:29:52 | DEBUG | resource: converted (Child) to declarative resource
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {'name': 'child', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: set resource name (parent) for: Parent
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'parent', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: starting attribute processing for (Parent)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'parent', 'path': 'child', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: name already set to (parent) for: Parent
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Parent
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: starting attribute processing for (Parent)
2025-03-24 19:29:52 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Parent
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: found class (Child) on (Parent)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: class (Child) has metadata: {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: registered component (parent) on: Parent
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: completed processing for (Parent) - metadata: {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Parent
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: completed processing for (Parent) - final metadata: {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Parent)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'name': 'parent', 'path': '/parent', 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'parent': <class 'ClientFactory.tests.unit.declarative.test_resource.test_resource_path_resolution.<locals>.Parent'>}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: set resource name (test) for: Test
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'test'}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: starting attribute processing for (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'test'}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: name already set to (test) for: Test
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Test
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (components) container for (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (methods) container for (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'test', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Test
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'test', 'components': {}, 'methods': {}}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: extracted path () from: Test
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: completed processing for (Test) - final metadata: {'name': 'test', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Test)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'name': 'test', 'components': {}, 'methods': {}, 'path': ''}
2025-03-24 19:29:52 | DEBUG | resource: converted (Test) to declarative resource
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: metadata before processing class attributes: {'name': 'testresource'}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource'}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (components) container for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: initialized (methods) container for (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: found callable (test_method) on: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: registered method (test_method) on: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x104600540>}}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x104600540>}}
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: extracted path () from: TestResource
2025-03-24 19:29:52 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x104600540>}, 'path': ''}
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:29:52 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x104600540>}, 'path': ''}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (TestComponent)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (TestComponent)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (TestComponent)
2025-03-24 19:37:57 | DEBUG | DeclarativeComponent: Processing Attribute (attribute) on: TestComponent
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (TestComponent) - metadata: {'attribute': 'value'}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Parent)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 19:37:57 | DEBUG | DeclarativeComponent: Processing Attribute (parent_attr) on: Parent
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'parent_attr': 'parent'}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (Parent) to (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (parent_attr) from (Parent) to (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeComponent: Processing Attribute (child_attr) on: Child
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (NestedComponent)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (NestedComponent)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (NestedComponent)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (NestedComponent) - metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeContainer) to (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeContainer) to (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeContainer) to (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeContainer) to (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeContainer) to (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeContainer) to (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeContainer) to (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeContainer) to (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: found callable (method) on: Container
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: registered method (method) on: Container
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: found class (NestedComponent) on (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: class (NestedComponent) has metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: registered component (nestedcomponent) on: Container
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1062a1a80>}}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x1062a1a80>}}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeComponent: Processing Attribute (attr) on: Test
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'attr': 'value'}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (Declarative)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Declarative)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (Declarative)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (Declarative) - metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (Source)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Source)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (Source)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (Source) - metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (Target)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Target)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (Target)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (Target) - metadata: {}
2025-03-24 19:37:57 | DEBUG | copymetadata: Copied metadata from (Source) to (Target)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (Component)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Component)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (Component)
2025-03-24 19:37:57 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: Component
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (Component) - metadata: {'name': 'mycomponent'}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeContainer) to (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeContainer) to (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeContainer) to (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeContainer) to (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeContainer) to (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeContainer) to (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeContainer) to (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeContainer) to (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: found class (Component) on (Container)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: class (Component) has metadata: {'name': 'mycomponent'}
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Container
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}, 'methods': {}}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (baseurl) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getresources) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getbaseurl) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (resources) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: TestClient
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: registered component (testresource) on: TestClient
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1062213a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x106221440>)>, 'resources': {}}
2025-03-24 19:37:57 | DEBUG | DeclarativeClient: found resource (testresource) on: TestClient
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1062213a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x106221440>)>, 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeClient) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeClient) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeClient) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeClient) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeClient) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeClient) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeClient) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeClient) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (baseurl) from (DeclarativeClient) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getresources) from (DeclarativeClient) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getbaseurl) from (DeclarativeClient) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (resources) from (DeclarativeClient) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: found class (TestResource) on (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: registered component (testresource) on: Test
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1062213a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x106221440>)>, 'resources': {}}
2025-03-24 19:37:57 | DEBUG | DeclarativeClient: found resource (testresource) on: Test
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'methods': {}, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1062213a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x106221440>)>, 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 19:37:57 | DEBUG | client: converted (Test) to declarative client
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (baseurl) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getresources) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getbaseurl) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (resources) from (DeclarativeClient) to (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'myresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: registered component (myresource) on: TestClient
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1062213a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x106221440>)>, 'resources': {}}
2025-03-24 19:37:57 | DEBUG | DeclarativeClient: found resource (myresource) on: TestClient
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'methods': {}, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1062213a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x106221440>)>, 'resources': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}}
2025-03-24 19:37:57 | DEBUG | client: converted (TestClient) to declarative client
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (BaseResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: set resource name (baseresource) for: BaseResource
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (BaseResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: starting attribute processing for (BaseResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'baseresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: name already set to (baseresource) for: BaseResource
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: BaseResource
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: BaseResource
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: completed processing for (BaseResource) - metadata: {'name': 'baseresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/base', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: BaseResource
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'baseresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/base', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: completed processing for (BaseResource) - final metadata: {'name': 'baseresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/base', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'name': 'baseresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/base', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | resource: converted (BaseResource) to declarative resource
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (BaseClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (BaseClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (baseurl) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getresources) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getbaseurl) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (resources) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (BaseClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: BaseClient
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: found class (BaseResource) on (BaseClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: class (BaseResource) has metadata: {'name': 'baseresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/base', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: registered component (baseresource) on: BaseClient
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: completed processing for (BaseClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1062213a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x106221440>)>, 'resources': {}}
2025-03-24 19:37:57 | DEBUG | DeclarativeClient: found resource (baseresource) on: BaseClient
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (BaseClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1062213a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x106221440>)>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (ChildResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: set resource name (childresource) for: ChildResource
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (ChildResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: starting attribute processing for (ChildResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'childresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: name already set to (childresource) for: ChildResource
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: ChildResource
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: ChildResource
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: completed processing for (ChildResource) - metadata: {'name': 'childresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/child', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: ChildResource
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'childresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/child', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: completed processing for (ChildResource) - final metadata: {'name': 'childresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/child', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'name': 'childresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/child', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | resource: converted (ChildResource) to declarative resource
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (ChildClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (BaseClient) to (ChildClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmetadata) from (BaseClient) to (ChildClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (setmetadata) from (BaseClient) to (ChildClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (BaseClient) to (ChildClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (BaseClient) to (ChildClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (BaseClient) to (ChildClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (findmetadata) from (BaseClient) to (ChildClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (components) from (BaseClient) to (ChildClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (methods) from (BaseClient) to (ChildClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (baseurl) from (BaseClient) to (ChildClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getresources) from (BaseClient) to (ChildClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getbaseurl) from (BaseClient) to (ChildClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (resources) from (BaseClient) to (ChildClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (ChildClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: found class (ChildResource) on (ChildClient)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: class (ChildResource) has metadata: {'name': 'childresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/child', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: registered component (childresource) on: ChildClient
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: completed processing for (ChildClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1062213a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x106221440>)>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:37:57 | DEBUG | DeclarativeClient: found resource (childresource) on: ChildClient
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (ChildClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'methods': {}, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x1062213a0>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x106221440>)>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test'}
2025-03-24 19:37:57 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {}
2025-03-24 19:37:57 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (Nested)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Nested)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (Nested)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (Nested) - metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeContainer) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeContainer) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeContainer) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeContainer) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeContainer) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeContainer) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeContainer) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeContainer) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: found callable (method) on: Test
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: registered method (method) on: Test
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: found class (Nested) on (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: class (Nested) has metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: registered component (nested) on: Test
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1062a0e00>}, 'value': 'test'}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x1062a0e00>}, 'value': 'test'}
2025-03-24 19:37:57 | DEBUG | container: converted (Test) to declarative container
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeContainer) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeContainer) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeContainer) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeContainer) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeContainer) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeContainer) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeContainer) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeContainer) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}}
2025-03-24 19:37:57 | DEBUG | container: converted (Test) to declarative container
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'test_resource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'test_resource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'test_resource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'test_resource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (GrandChild)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: set resource name (grandchild) for: GrandChild
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (GrandChild)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: starting attribute processing for (GrandChild)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'grandchild', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: name already set to (grandchild) for: GrandChild
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: GrandChild
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: starting attribute processing for (GrandChild)
2025-03-24 19:37:57 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: GrandChild
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: completed processing for (GrandChild) - metadata: {'name': 'grandchild', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': 'grandchild', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: GrandChild
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'grandchild', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': 'grandchild', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: completed processing for (GrandChild) - final metadata: {'name': 'grandchild', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': 'grandchild', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'name': 'grandchild', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': 'grandchild', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | resource: converted (GrandChild) to declarative resource
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: set resource name (child) for: Child
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: starting attribute processing for (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'child', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: name already set to (child) for: Child
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Child
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: starting attribute processing for (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Child
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: found class (GrandChild) on (Child)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: class (GrandChild) has metadata: {'name': 'grandchild', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': 'grandchild', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: registered component (grandchild) on: Child
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: completed processing for (Child) - metadata: {'name': 'child', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'path': 'child', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Child
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'child', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'path': 'child', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: completed processing for (Child) - final metadata: {'name': 'child', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'path': 'child', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'name': 'child', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'path': 'child', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | resource: converted (Child) to declarative resource
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: set resource name (parent) for: Parent
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Parent)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (Parent)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (Parent)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (Parent)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (Parent)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (Parent)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (Parent)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (Parent)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (Parent)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (Parent)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (Parent)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (Parent)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (Parent)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: starting attribute processing for (Parent)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'parent', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: name already set to (parent) for: Parent
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Parent
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: starting attribute processing for (Parent)
2025-03-24 19:37:57 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Parent
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: found class (Child) on (Parent)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: class (Child) has metadata: {'name': 'child', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'methods': {}, 'path': 'child', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: registered component (child) on: Parent
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: completed processing for (Parent) - metadata: {'name': 'parent', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'path': '/parent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Parent
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'parent', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'path': '/parent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: completed processing for (Parent) - final metadata: {'name': 'parent', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'path': '/parent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'name': 'parent', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'methods': {}, 'path': '/parent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: set resource name (test) for: Test
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: starting attribute processing for (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'test', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: name already set to (test) for: Test
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Test
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'test', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Test
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'test', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: completed processing for (Test) - final metadata: {'name': 'test', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'name': 'test', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | resource: converted (Test) to declarative resource
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: found callable (test_method) on: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: registered method (test_method) on: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x1062a1a80>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x1062a1a80>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x1062a1a80>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:37:57 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x1062202c0>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x106220360>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106220400>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x1062204a0>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x106220540>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x1062205e0>)>, 'components': {}, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x1062a1a80>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106220ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106220f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106220fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (TestComponent)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (TestComponent)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (TestComponent)
2025-03-24 19:41:32 | DEBUG | DeclarativeComponent: Processing Attribute (attribute) on: TestComponent
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (TestComponent) - metadata: {'attribute': 'value'}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Parent)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 19:41:32 | DEBUG | DeclarativeComponent: Processing Attribute (parent_attr) on: Parent
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'parent_attr': 'parent'}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (Parent) to (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (parent_attr) from (Parent) to (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeComponent: Processing Attribute (child_attr) on: Child
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'parent_attr': 'parent', 'child_attr': 'child'}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (NestedComponent)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (NestedComponent)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (NestedComponent)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (NestedComponent) - metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeContainer) to (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeContainer) to (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeContainer) to (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeContainer) to (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeContainer) to (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeContainer) to (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeContainer) to (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeContainer) to (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: found callable (method) on: Container
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: registered method (method) on: Container
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: found class (NestedComponent) on (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: class (NestedComponent) has metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: registered component (nestedcomponent) on: Container
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10661da80>}, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {'method': <function test_declarative_container.<locals>.Container.method at 0x10661da80>}, 'components': {'nestedcomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container.<locals>.Container.NestedComponent'>}}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeComponent: Processing Attribute (attr) on: Test
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'attr': 'value'}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (Declarative)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Declarative)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (Declarative)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (Declarative) - metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (Source)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Source)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (Source)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (Source) - metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (Target)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Target)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (Target)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (Target) - metadata: {}
2025-03-24 19:41:32 | DEBUG | copymetadata: Copied metadata from (Source) to (Target)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (Component)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Component)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (Component)
2025-03-24 19:41:32 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: Component
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (Component) - metadata: {'name': 'mycomponent'}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeContainer) to (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeContainer) to (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeContainer) to (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeContainer) to (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeContainer) to (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeContainer) to (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeContainer) to (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeContainer) to (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: starting attribute processing for (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: found class (Component) on (Container)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: class (Component) has metadata: {'name': 'mycomponent'}
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: registered component (mycomponent) on: Container
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: completed processing for (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (Container) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {'mycomponent': <class 'ClientFactory.tests.unit.declarative.test_base.test_declarative_container_discovery.<locals>.Container.Component'>}}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (baseurl) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getresources) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getbaseurl) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (resources) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: TestClient
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: registered component (testresource) on: TestClient
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x106589300>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1065893a0>)>, 'resources': {}}
2025-03-24 19:41:32 | DEBUG | DeclarativeClient: found resource (testresource) on: TestClient
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'baseurl': 'https://api.test.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x106589300>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1065893a0>)>, 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | resource: converted (TestResource) to declarative resource
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeClient) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeClient) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeClient) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeClient) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeClient) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeClient) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeClient) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeClient) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (baseurl) from (DeclarativeClient) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getresources) from (DeclarativeClient) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getbaseurl) from (DeclarativeClient) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (resources) from (DeclarativeClient) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: found class (TestResource) on (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: registered component (testresource) on: Test
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x106589300>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1065893a0>)>, 'resources': {}}
2025-03-24 19:41:32 | DEBUG | DeclarativeClient: found resource (testresource) on: Test
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x106589300>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1065893a0>)>, 'resources': {'testresource': <class 'ClientFactory.tests.unit.declarative.test_client.TestResource'>}}
2025-03-24 19:41:32 | DEBUG | client: converted (Test) to declarative client
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (baseurl) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getresources) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getbaseurl) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (resources) from (DeclarativeClient) to (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: starting attribute processing for (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: found class (TestResource) on (TestClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: class (TestResource) has metadata: {'name': 'myresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: registered component (myresource) on: TestClient
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: completed processing for (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x106589300>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1065893a0>)>, 'resources': {}}
2025-03-24 19:41:32 | DEBUG | DeclarativeClient: found resource (myresource) on: TestClient
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (TestClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x106589300>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1065893a0>)>, 'resources': {'myresource': <class 'ClientFactory.tests.unit.declarative.test_client.test_client_resource_registration.<locals>.TestResource'>}}
2025-03-24 19:41:32 | DEBUG | client: converted (TestClient) to declarative client
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (BaseResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: set resource name (baseresource) for: BaseResource
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (BaseResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (BaseResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (BaseResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: starting attribute processing for (BaseResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'baseresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: name already set to (baseresource) for: BaseResource
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: BaseResource
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: BaseResource
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: completed processing for (BaseResource) - metadata: {'name': 'baseresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/base', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: BaseResource
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'baseresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/base', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: completed processing for (BaseResource) - final metadata: {'name': 'baseresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/base', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (BaseResource) - metadata: {'name': 'baseresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/base', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | resource: converted (BaseResource) to declarative resource
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (BaseClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (BaseClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (baseurl) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getresources) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getbaseurl) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (resources) from (DeclarativeClient) to (BaseClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (BaseClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: starting attribute processing for (BaseClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeComponent: Processing Attribute (baseurl) on: BaseClient
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: found class (BaseResource) on (BaseClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: class (BaseResource) has metadata: {'name': 'baseresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/base', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: registered component (baseresource) on: BaseClient
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: completed processing for (BaseClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x106589300>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1065893a0>)>, 'resources': {}}
2025-03-24 19:41:32 | DEBUG | DeclarativeClient: found resource (baseresource) on: BaseClient
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (BaseClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x106589300>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1065893a0>)>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (ChildResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: set resource name (childresource) for: ChildResource
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (ChildResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (ChildResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (ChildResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: starting attribute processing for (ChildResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'childresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: name already set to (childresource) for: ChildResource
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: ChildResource
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: ChildResource
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: completed processing for (ChildResource) - metadata: {'name': 'childresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/child', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: ChildResource
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'childresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/child', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: completed processing for (ChildResource) - final metadata: {'name': 'childresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/child', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (ChildResource) - metadata: {'name': 'childresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/child', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | resource: converted (ChildResource) to declarative resource
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (ChildClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (BaseClient) to (ChildClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmetadata) from (BaseClient) to (ChildClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (setmetadata) from (BaseClient) to (ChildClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (BaseClient) to (ChildClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (BaseClient) to (ChildClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (BaseClient) to (ChildClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (findmetadata) from (BaseClient) to (ChildClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (methods) from (BaseClient) to (ChildClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (components) from (BaseClient) to (ChildClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (baseurl) from (BaseClient) to (ChildClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getresources) from (BaseClient) to (ChildClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getbaseurl) from (BaseClient) to (ChildClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (resources) from (BaseClient) to (ChildClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (ChildClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: starting attribute processing for (ChildClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: found class (ChildResource) on (ChildClient)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: class (ChildResource) has metadata: {'name': 'childresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/child', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: registered component (childresource) on: ChildClient
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: completed processing for (ChildClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x106589300>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1065893a0>)>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>}}
2025-03-24 19:41:32 | DEBUG | DeclarativeClient: found resource (childresource) on: ChildClient
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (ChildClient) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}, 'baseurl': 'https://api.base.com', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x106589300>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x1065893a0>)>, 'resources': {'baseresource': <class 'ClientFactory.tests.unit.declarative.test_client.BaseResource'>, 'childresource': <class 'ClientFactory.tests.unit.declarative.test_client.ChildResource'>}}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'value': 'test'}
2025-03-24 19:41:32 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {}
2025-03-24 19:41:32 | DEBUG | declarative: converted (Test) to declarative component
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (Nested)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeComponent) to (Nested)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (Nested)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (Nested) - metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeContainer) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeContainer) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeContainer) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeContainer) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeContainer) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeContainer) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeContainer) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeContainer) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeComponent: Processing Attribute (value) on: Test
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: found callable (method) on: Test
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: registered method (method) on: Test
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: found class (Nested) on (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: class (Nested) has metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: registered component (nested) on: Test
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x10661ce00>}, 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'value': 'test'}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {'method': <function test_container_decorator.<locals>.Test.method at 0x10661ce00>}, 'components': {'nested': <class 'ClientFactory.tests.unit.declarative.test_decorators.test_container_decorator.<locals>.Test.Nested'>}, 'value': 'test'}
2025-03-24 19:41:32 | DEBUG | container: converted (Test) to declarative container
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeContainer) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeContainer) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeContainer) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeContainer) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeContainer) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeContainer) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeContainer) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeContainer) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeContainer) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}}
2025-03-24 19:41:32 | DEBUG | container: converted (Test) to declarative container
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeComponent: Processing Attribute (name) on: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'test_resource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'test_resource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'test_resource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'test_resource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '/test', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (GrandChild)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: set resource name (grandchild) for: GrandChild
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (GrandChild)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (GrandChild)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (GrandChild)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: starting attribute processing for (GrandChild)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'grandchild', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: name already set to (grandchild) for: GrandChild
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: GrandChild
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: starting attribute processing for (GrandChild)
2025-03-24 19:41:32 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: GrandChild
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: completed processing for (GrandChild) - metadata: {'name': 'grandchild', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': 'grandchild', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: GrandChild
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'grandchild', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': 'grandchild', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: completed processing for (GrandChild) - final metadata: {'name': 'grandchild', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': 'grandchild', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (GrandChild) - metadata: {'name': 'grandchild', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': 'grandchild', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | resource: converted (GrandChild) to declarative resource
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: set resource name (child) for: Child
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: starting attribute processing for (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'child', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: name already set to (child) for: Child
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Child
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: starting attribute processing for (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Child
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: found class (GrandChild) on (Child)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: class (GrandChild) has metadata: {'name': 'grandchild', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': 'grandchild', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: registered component (grandchild) on: Child
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: completed processing for (Child) - metadata: {'name': 'child', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'path': 'child', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Child
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'child', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'path': 'child', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: completed processing for (Child) - final metadata: {'name': 'child', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'path': 'child', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (Child) - metadata: {'name': 'child', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'path': 'child', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | resource: converted (Child) to declarative resource
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (Parent)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: set resource name (parent) for: Parent
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Parent)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (Parent)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (Parent)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (Parent)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (Parent)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (Parent)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (Parent)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (Parent)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (Parent)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (Parent)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (Parent)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (Parent)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (Parent)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (Parent)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: starting attribute processing for (Parent)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'parent', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: name already set to (parent) for: Parent
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Parent
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: starting attribute processing for (Parent)
2025-03-24 19:41:32 | DEBUG | DeclarativeComponent: Processing Attribute (path) on: Parent
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: found class (Child) on (Parent)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: class (Child) has metadata: {'name': 'child', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {'grandchild': <class 'ClientFactory.tests.unit.declarative.test_resource.GrandChild'>}, 'path': 'child', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: registered component (child) on: Parent
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: completed processing for (Parent) - metadata: {'name': 'parent', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'path': '/parent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Parent
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'parent', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'path': '/parent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: completed processing for (Parent) - final metadata: {'name': 'parent', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'path': '/parent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (Parent) - metadata: {'name': 'parent', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {'child': <class 'ClientFactory.tests.unit.declarative.test_resource.Child'>}, 'path': '/parent', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: set resource name (test) for: Test
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: starting attribute processing for (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'test', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: name already set to (test) for: Test
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Test
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: starting attribute processing for (Test)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: completed processing for (Test) - metadata: {'name': 'test', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Test
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'test', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: completed processing for (Test) - final metadata: {'name': 'test', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (Test) - metadata: {'name': 'test', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | resource: converted (Test) to declarative resource
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: creating class (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: set resource name (testresource) for: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: processing attributes for (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: starting attribute processing for (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: name already set to (testresource) for: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: starting attribute processing for (TestResource)
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: found callable (test_method) on: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: registered method (test_method) on: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeContainer: completed processing for (TestResource) - metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x10661cae0>}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: TestResource
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x10661cae0>}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeResource: completed processing for (TestResource) - final metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x10661cae0>}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:41:32 | DEBUG | DeclarativeMeta: completed creation of (TestResource) - metadata: {'name': 'testresource', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x106588220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x1065882c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x106588360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x106588400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x1065884a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x106588540>)>, 'methods': {'test_method': <function test_resource_methods.<locals>.TestResource.test_method at 0x10661cae0>}, 'components': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x106588ea0>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x106588f40>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x106588fe0>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: creating class (Users)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: set resource name (users) for: Users
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Users)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (Users)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (Users)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (Users)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (Users)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (Users)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (Users)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (Users)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (Users)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (Users)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (Users)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (Users)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (Users)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: processing attributes for (Users)
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: starting attribute processing for (Users)
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'users', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: name already set to (users) for: Users
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Users
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: starting attribute processing for (Users)
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: found callable (list) on: Users
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: registered method (list) on: Users
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: found callable (get) on: Users
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: registered method (get) on: Users
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: completed processing for (Users) - metadata: {'name': 'users', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {'list': <function test_complete_api_definition.<locals>.TestAPI.Users.list at 0x1028ef740>, 'get': <function test_complete_api_definition.<locals>.TestAPI.Users.get at 0x1028ef7e0>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Users
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'users', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {'list': <function test_complete_api_definition.<locals>.TestAPI.Users.list at 0x1028ef740>, 'get': <function test_complete_api_definition.<locals>.TestAPI.Users.get at 0x1028ef7e0>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: completed processing for (Users) - final metadata: {'name': 'users', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {'list': <function test_complete_api_definition.<locals>.TestAPI.Users.list at 0x1028ef740>, 'get': <function test_complete_api_definition.<locals>.TestAPI.Users.get at 0x1028ef7e0>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: completed creation of (Users) - metadata: {'name': 'users', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {'list': <function test_complete_api_definition.<locals>.TestAPI.Users.list at 0x1028ef740>, 'get': <function test_complete_api_definition.<locals>.TestAPI.Users.get at 0x1028ef7e0>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | resource: converted (Users) to declarative resource
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: creating class (Comments)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: set resource name (comments) for: Comments
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Comments)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (Comments)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (Comments)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (Comments)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (Comments)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (Comments)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (Comments)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (Comments)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (Comments)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (Comments)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (Comments)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (Comments)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (Comments)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: processing attributes for (Comments)
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: starting attribute processing for (Comments)
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'comments', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: name already set to (comments) for: Comments
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Comments
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: starting attribute processing for (Comments)
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: found callable (list) on: Comments
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: registered method (list) on: Comments
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: completed processing for (Comments) - metadata: {'name': 'comments', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {'list': <function test_complete_api_definition.<locals>.TestAPI.Posts.Comments.list at 0x1028efba0>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Comments
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'comments', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {'list': <function test_complete_api_definition.<locals>.TestAPI.Posts.Comments.list at 0x1028efba0>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: completed processing for (Comments) - final metadata: {'name': 'comments', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {'list': <function test_complete_api_definition.<locals>.TestAPI.Posts.Comments.list at 0x1028efba0>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: completed creation of (Comments) - metadata: {'name': 'comments', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {'list': <function test_complete_api_definition.<locals>.TestAPI.Posts.Comments.list at 0x1028efba0>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | resource: converted (Comments) to declarative resource
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: creating class (Posts)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: set resource name (posts) for: Posts
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Posts)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (Posts)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (Posts)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (Posts)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (Posts)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (Posts)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (Posts)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (Posts)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (Posts)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (Posts)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (Posts)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (Posts)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (Posts)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: processing attributes for (Posts)
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: starting attribute processing for (Posts)
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'posts', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: name already set to (posts) for: Posts
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Posts
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: starting attribute processing for (Posts)
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: found callable (create) on: Posts
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: registered method (create) on: Posts
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: found class (Comments) on (Posts)
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: class (Comments) has metadata: {'name': 'comments', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {'list': <function test_complete_api_definition.<locals>.TestAPI.Posts.Comments.list at 0x1028efba0>}, 'path': '{id}/comments', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: registered component (comments) on: Posts
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: completed processing for (Posts) - metadata: {'name': 'posts', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {'comments': <class 'ClientFactory.tests.integration.declarative.test_integration.Comments'>}, 'methods': {'create': <function test_complete_api_definition.<locals>.TestAPI.Posts.create at 0x1028efe20>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Posts
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'posts', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {'comments': <class 'ClientFactory.tests.integration.declarative.test_integration.Comments'>}, 'methods': {'create': <function test_complete_api_definition.<locals>.TestAPI.Posts.create at 0x1028efe20>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: completed processing for (Posts) - final metadata: {'name': 'posts', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {'comments': <class 'ClientFactory.tests.integration.declarative.test_integration.Comments'>}, 'methods': {'create': <function test_complete_api_definition.<locals>.TestAPI.Posts.create at 0x1028efe20>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: completed creation of (Posts) - metadata: {'name': 'posts', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {'comments': <class 'ClientFactory.tests.integration.declarative.test_integration.Comments'>}, 'methods': {'create': <function test_complete_api_definition.<locals>.TestAPI.Posts.create at 0x1028efe20>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | resource: converted (Posts) to declarative resource
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: creating class (TestAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (TestAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeClient) to (TestAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeClient) to (TestAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeClient) to (TestAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeClient) to (TestAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeClient) to (TestAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeClient) to (TestAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeClient) to (TestAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeClient) to (TestAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (baseurl) from (DeclarativeClient) to (TestAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getresources) from (DeclarativeClient) to (TestAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getbaseurl) from (DeclarativeClient) to (TestAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (resources) from (DeclarativeClient) to (TestAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: processing attributes for (TestAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: starting attribute processing for (TestAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: found class (Users) on (TestAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: class (Users) has metadata: {'name': 'users', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {'list': <function test_complete_api_definition.<locals>.TestAPI.Users.list at 0x1028ef740>, 'get': <function test_complete_api_definition.<locals>.TestAPI.Users.get at 0x1028ef7e0>}, 'path': '/users', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: registered component (users) on: TestAPI
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: found class (Posts) on (TestAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: class (Posts) has metadata: {'name': 'posts', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {'comments': <class 'ClientFactory.tests.integration.declarative.test_integration.Comments'>}, 'methods': {'create': <function test_complete_api_definition.<locals>.TestAPI.Posts.create at 0x1028efe20>}, 'path': '/posts', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: registered component (posts) on: TestAPI
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: completed processing for (TestAPI) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {'users': <class 'ClientFactory.tests.integration.declarative.test_integration.Users'>, 'posts': <class 'ClientFactory.tests.integration.declarative.test_integration.Posts'>}, 'methods': {}, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10289d300>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10289d3a0>)>, 'resources': {}}
2025-03-24 19:42:01 | DEBUG | DeclarativeClient: found resource (users) on: TestAPI
2025-03-24 19:42:01 | DEBUG | DeclarativeClient: found resource (posts) on: TestAPI
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: completed creation of (TestAPI) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {'users': <class 'ClientFactory.tests.integration.declarative.test_integration.Users'>, 'posts': <class 'ClientFactory.tests.integration.declarative.test_integration.Posts'>}, 'methods': {}, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10289d300>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10289d3a0>)>, 'resources': {'users': <class 'ClientFactory.tests.integration.declarative.test_integration.Users'>, 'posts': <class 'ClientFactory.tests.integration.declarative.test_integration.Posts'>}}
2025-03-24 19:42:01 | DEBUG | client: converted (TestAPI) to declarative client
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: creating class (Protected)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: set resource name (protected) for: Protected
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (Protected)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (Protected)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (Protected)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (Protected)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (Protected)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (Protected)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (Protected)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (Protected)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (Protected)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (Protected)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (Protected)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (Protected)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (Protected)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: processing attributes for (Protected)
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: starting attribute processing for (Protected)
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'protected', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: name already set to (protected) for: Protected
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: Protected
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: starting attribute processing for (Protected)
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: found callable (secure_method) on: Protected
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: registered method (secure_method) on: Protected
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: completed processing for (Protected) - metadata: {'name': 'protected', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {'secure_method': <function test_auth_integration.<locals>.AuthAPI.Protected.secure_method at 0x1028efc40>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: Protected
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'protected', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {'secure_method': <function test_auth_integration.<locals>.AuthAPI.Protected.secure_method at 0x1028efc40>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: completed processing for (Protected) - final metadata: {'name': 'protected', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {'secure_method': <function test_auth_integration.<locals>.AuthAPI.Protected.secure_method at 0x1028efc40>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: completed creation of (Protected) - metadata: {'name': 'protected', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {'secure_method': <function test_auth_integration.<locals>.AuthAPI.Protected.secure_method at 0x1028efc40>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | resource: converted (Protected) to declarative resource
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: creating class (AuthAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (AuthAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeClient) to (AuthAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeClient) to (AuthAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeClient) to (AuthAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeClient) to (AuthAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeClient) to (AuthAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeClient) to (AuthAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeClient) to (AuthAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeClient) to (AuthAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (baseurl) from (DeclarativeClient) to (AuthAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getresources) from (DeclarativeClient) to (AuthAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getbaseurl) from (DeclarativeClient) to (AuthAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (resources) from (DeclarativeClient) to (AuthAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: processing attributes for (AuthAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: starting attribute processing for (AuthAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeComponent: Processing Attribute (auth_type) on: AuthAPI
2025-03-24 19:42:01 | DEBUG | DeclarativeComponent: Processing Attribute (auth_token) on: AuthAPI
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: found class (Protected) on (AuthAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: class (Protected) has metadata: {'name': 'protected', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {'secure_method': <function test_auth_integration.<locals>.AuthAPI.Protected.secure_method at 0x1028efc40>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: registered component (protected) on: AuthAPI
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: completed processing for (AuthAPI) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {'protected': <class 'ClientFactory.tests.integration.declarative.test_integration.Protected'>}, 'methods': {}, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10289d300>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10289d3a0>)>, 'resources': {}, 'auth_type': 'bearer', 'auth_token': 'test_token'}
2025-03-24 19:42:01 | DEBUG | DeclarativeClient: found resource (protected) on: AuthAPI
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: completed creation of (AuthAPI) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {'protected': <class 'ClientFactory.tests.integration.declarative.test_integration.Protected'>}, 'methods': {}, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10289d300>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10289d3a0>)>, 'resources': {'protected': <class 'ClientFactory.tests.integration.declarative.test_integration.Protected'>}, 'auth_type': 'bearer', 'auth_token': 'test_token'}
2025-03-24 19:42:01 | DEBUG | client: converted (AuthAPI) to declarative client
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: creating class (C)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: set resource name (c) for: C
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (C)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (C)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (C)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (C)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (C)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (C)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (C)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (C)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (C)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (C)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (C)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (C)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (C)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: processing attributes for (C)
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: starting attribute processing for (C)
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'c', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: name already set to (c) for: C
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: C
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: starting attribute processing for (C)
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: found callable (method) on: C
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: registered method (method) on: C
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: completed processing for (C) - metadata: {'name': 'c', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {'method': <function test_nested_resource_integration.<locals>.NestedAPI.A.B.C.method at 0x102940cc0>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: C
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'c', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {'method': <function test_nested_resource_integration.<locals>.NestedAPI.A.B.C.method at 0x102940cc0>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: completed processing for (C) - final metadata: {'name': 'c', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {'method': <function test_nested_resource_integration.<locals>.NestedAPI.A.B.C.method at 0x102940cc0>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: completed creation of (C) - metadata: {'name': 'c', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {'method': <function test_nested_resource_integration.<locals>.NestedAPI.A.B.C.method at 0x102940cc0>}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | resource: converted (C) to declarative resource
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: creating class (B)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: set resource name (b) for: B
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (B)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (B)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (B)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (B)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (B)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (B)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (B)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (B)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (B)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (B)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (B)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (B)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (B)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: processing attributes for (B)
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: starting attribute processing for (B)
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'b', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: name already set to (b) for: B
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: B
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: starting attribute processing for (B)
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: found class (C) on (B)
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: class (C) has metadata: {'name': 'c', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {'method': <function test_nested_resource_integration.<locals>.NestedAPI.A.B.C.method at 0x102940cc0>}, 'path': 'c', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: registered component (c) on: B
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: completed processing for (B) - metadata: {'name': 'b', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {'c': <class 'ClientFactory.tests.integration.declarative.test_integration.C'>}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: B
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'b', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {'c': <class 'ClientFactory.tests.integration.declarative.test_integration.C'>}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: completed processing for (B) - final metadata: {'name': 'b', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {'c': <class 'ClientFactory.tests.integration.declarative.test_integration.C'>}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: completed creation of (B) - metadata: {'name': 'b', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {'c': <class 'ClientFactory.tests.integration.declarative.test_integration.C'>}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | resource: converted (B) to declarative resource
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: creating class (A)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: set resource name (a) for: A
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeResource) to (A)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeResource) to (A)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeResource) to (A)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeResource) to (A)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeResource) to (A)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeResource) to (A)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeResource) to (A)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeResource) to (A)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeResource) to (A)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (path) from (DeclarativeResource) to (A)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getfullpath) from (DeclarativeResource) to (A)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getmethods) from (DeclarativeResource) to (A)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getnestedresources) from (DeclarativeResource) to (A)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: processing attributes for (A)
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: starting attribute processing for (A)
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: current metadata before processing: {'name': 'a', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: name already set to (a) for: A
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: calling super()._processclassattributes for: A
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: starting attribute processing for (A)
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: found class (B) on (A)
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: class (B) has metadata: {'name': 'b', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {'c': <class 'ClientFactory.tests.integration.declarative.test_integration.C'>}, 'methods': {}, 'path': 'b', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: registered component (b) on: A
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: completed processing for (A) - metadata: {'name': 'a', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {'b': <class 'ClientFactory.tests.integration.declarative.test_integration.B'>}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: returned from super()._processclassattributes for: A
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: metadata after super(): {'name': 'a', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {'b': <class 'ClientFactory.tests.integration.declarative.test_integration.B'>}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeResource: completed processing for (A) - final metadata: {'name': 'a', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {'b': <class 'ClientFactory.tests.integration.declarative.test_integration.B'>}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: completed creation of (A) - metadata: {'name': 'a', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {'b': <class 'ClientFactory.tests.integration.declarative.test_integration.B'>}, 'methods': {}, 'path': '', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | resource: converted (A) to declarative resource
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: creating class (NestedAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: initial metadata: {}
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copying metadata from base (DeclarativeClient) to (NestedAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getmetadata) from (DeclarativeClient) to (NestedAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (setmetadata) from (DeclarativeClient) to (NestedAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (hasmetadata) from (DeclarativeClient) to (NestedAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (updatemetdata) from (DeclarativeClient) to (NestedAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getallmetadata) from (DeclarativeClient) to (NestedAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (findmetadata) from (DeclarativeClient) to (NestedAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (components) from (DeclarativeClient) to (NestedAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (methods) from (DeclarativeClient) to (NestedAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (baseurl) from (DeclarativeClient) to (NestedAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getresources) from (DeclarativeClient) to (NestedAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (getbaseurl) from (DeclarativeClient) to (NestedAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: copied (resources) from (DeclarativeClient) to (NestedAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: processing attributes for (NestedAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: starting attribute processing for (NestedAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: found class (A) on (NestedAPI)
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: class (A) has metadata: {'name': 'a', 'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {'b': <class 'ClientFactory.tests.integration.declarative.test_integration.B'>}, 'methods': {}, 'path': '/a', 'getfullpath': <classmethod(<function DeclarativeResource.getfullpath at 0x10289ce00>)>, 'getmethods': <classmethod(<function DeclarativeResource.getmethods at 0x10289cea0>)>, 'getnestedresources': <classmethod(<function DeclarativeResource.getnestedresources at 0x10289cf40>)>}
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: registered component (a) on: NestedAPI
2025-03-24 19:42:01 | DEBUG | DeclarativeContainer: completed processing for (NestedAPI) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {'a': <class 'ClientFactory.tests.integration.declarative.test_integration.A'>}, 'methods': {}, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10289d300>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10289d3a0>)>, 'resources': {}}
2025-03-24 19:42:01 | DEBUG | DeclarativeClient: found resource (a) on: NestedAPI
2025-03-24 19:42:01 | DEBUG | DeclarativeMeta: completed creation of (NestedAPI) - metadata: {'getmetadata': <classmethod(<function DeclarativeComponent.getmetadata at 0x10289c220>)>, 'setmetadata': <classmethod(<function DeclarativeComponent.setmetadata at 0x10289c2c0>)>, 'hasmetadata': <classmethod(<function DeclarativeComponent.hasmetadata at 0x10289c360>)>, 'updatemetdata': <classmethod(<function DeclarativeComponent.updatemetdata at 0x10289c400>)>, 'getallmetadata': <classmethod(<function DeclarativeComponent.getallmetadata at 0x10289c4a0>)>, 'findmetadata': <classmethod(<function DeclarativeComponent.findmetadata at 0x10289c540>)>, 'components': {'a': <class 'ClientFactory.tests.integration.declarative.test_integration.A'>}, 'methods': {}, 'baseurl': '', 'getresources': <classmethod(<function DeclarativeClient.getresources at 0x10289d300>)>, 'getbaseurl': <classmethod(<function DeclarativeClient.getbaseurl at 0x10289d3a0>)>, 'resources': {'a': <class 'ClientFactory.tests.integration.declarative.test_integration.A'>}}
2025-03-24 19:42:01 | DEBUG | client: converted (NestedAPI) to declarative client
